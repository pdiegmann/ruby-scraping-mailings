{"name": "Michal Rokos", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/169", "text": "<pre>Hello,\n\n\tdo you think that could be possibe to make 'warn_print' function\n\tfrom error.c public (it means: void instead of static void)?\n\n\tThank you for concidering...\n\n\t\tMichal\n\n-- \n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\nMichal Rokos                         Czech Technical University, Prague\nE-mail:m.rokos / sh.cvut.cz      ICQ:36118339      Jabber:majkl / jabber.cz\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n<a name=\"tail\"></a></pre>", "references": [""], "user": "m.rokos@  .  u  c", "date": "2002-06-14 05:50:34 +0900", "reply-to": "", "id": "169", "channel": "ruby-core", "subject": "[Request] to make 'warn_print' public"}
{"name": "Matt Armstrong", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/189", "text": "<pre>matz / ruby-lang.org (Yukihiro Matsumoto) writes:\n\n&gt; <span style=\"color: #007700;\">In message \"Steps to get multiple interpreters per process...\"</span>\n&gt;     <span style=\"color: #007700;\">on 02/06/25, Sean Chittenden &lt;sean / ruby-lang.org&gt; writes:</span>\n&gt;\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">Can someone chart out what would need to happen to get multiple ruby</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">interpreters per process that way myself and others can do the leg</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">work?  -sc</span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">We have to list all global variables and pack everything into a</span>\n&gt; <span style=\"color: #007700;\">interpreter struct (like Perl guys did once).  YACC parser still</span>\n&gt; <span style=\"color: #007700;\">uses globals, but it must be another story.</span>\n\nI imagine there might also be issues with Ruby stuff that touches the\nprocess' global state: signal handlers, cwd, etc.  Multiple\ninterpreters might have to communicate with each other somehow for\nthis.  Or maybe not.\n<a name=\"tail\"></a></pre>", "references": ["186", "187"], "user": "matt@  c  y  o", "date": "2002-06-25 13:50:22 +0900", "reply-to": "187", "id": "189", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "Sean Chittenden", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/188", "text": "<pre>&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">Can someone chart out what would need to happen to get multiple</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">ruby interpreters per process that way myself and others can do the</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">leg work?  -sc</span></span>\n&gt; \n&gt; <span style=\"color: #007700;\">We have to list all global variables and pack everything into a</span>\n&gt; <span style=\"color: #007700;\">interpreter struct (like Perl guys did once).  YACC parser still</span>\n&gt; <span style=\"color: #007700;\">uses globals, but it must be another story.</span>\n\nMakes sense.  What I don't fully understand (I've been staring at this\nscreen for too long and am about to go for a run, so bare with me) is:\n\n*) Once the globals are contained in a struct, where will they live?\n In a global list that gets locked every time a new interpreter\n instance gets added to the process?\n\n*) How will functions that need to make use of this structure identify\n which stuct in the list is theirs to play with?\n\nAs an after thought, once the globals are all contained, someone with\nWin32 knowledge could easily implement a win32 fork call that uses\nCreateProcess() and then pass only the data structure to the new\nprocess.  I'm going off of what I've skimmed from the PostgreSQL guys,\nbut that'd put another nail in the cygwin coffin.\n\n-sc\n\n-- \nSean Chittenden\n<a name=\"tail\"></a></pre>", "references": ["186", "187"], "user": "sean@  b  l  g  r", "date": "2002-06-25 10:50:45 +0900", "reply-to": "187", "id": "188", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "Chris Ross", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/193", "text": "<pre>\nOn Tue, 25 Jun 2002 09:24:56 ts wrote:\n: <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt;<span style=\"color: #F000F0;\">&gt;&gt; \"C\" == Chris Ross &lt;chris / darkrock.co.uk&gt; writes:</span></span></span></span>\n: \n: <span style=\"color: #007700;\">C&gt; <span style=\"color: #D2691E;\">1) Pass the structure a round the program such that it is accessable,</span></span>\n: <span style=\"color: #007700;\">C&gt;    <span style=\"color: #D2691E;\">both php and ferite do it this way [not sure about others as I have</span></span>\n: <span style=\"color: #007700;\">C&gt;    <span style=\"color: #D2691E;\">not looked in a while].</span></span>\n: \n:  <span style=\"color: #007700;\">How do you do it ?</span>\n: \n:  <span style=\"color: #007700;\">Via #define like perl ?</span>\n\nI store all things that are related to a execution instance in a\nFeriteScript* and then pass that to all functions. They simply all \ntake a FeriteScript* as the first argument. \n\nRegards,\n\nChris\n--\n+------------------------------------------------------------------+\n| <span style=\"color: #007700;\">Chris Ross   |      chris / darkrock.co.uk | ctr / ferite.org        |</span>\n|              <span style=\"color: #007700;\">| <span style=\"color: #D2691E;\"><a href=\"http://www.darkrock.co.uk\" target=\"_top\">http://www.darkrock.co.uk</a> | <a href=\"http://www.ferite.org\" target=\"_top\">http://www.ferite.org</a> |</span></span>\n+------------------------------------------------------------------+\n\"Life is an onion and one peels away its layers crying.\"\n<a name=\"tail\"></a></pre>", "references": ["186", "187", "188", "191", "192"], "user": "chris@  r  o  .  .", "date": "2002-06-25 18:00:57 +0900", "reply-to": "192", "id": "193", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "ts", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/192", "text": "<pre>&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt;<span style=\"color: #F000F0;\">&gt; \"C\" == Chris Ross &lt;chris / darkrock.co.uk&gt; writes:</span></span></span></span>\n\nC&gt; <span style=\"color: #007700;\">1) Pass the structure a round the program such that it is accessable,</span>\nC&gt;    <span style=\"color: #007700;\">both php and ferite do it this way [not sure about others as I have</span>\nC&gt;    <span style=\"color: #007700;\">not looked in a while].</span>\n\n How do you do it ?\n\n Via #define like perl ?\n\n\nGuy Decoux\n<a name=\"tail\"></a></pre>", "references": ["186", "187", "188", "191"], "user": "decoux@  u  n  n  .", "date": "2002-06-25 17:24:56 +0900", "reply-to": "191", "id": "192", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "Chris Ross", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/191", "text": "<pre>\nOn Tue, 25 Jun 2002 02:50:45 Sean Chittenden wrote:\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">|<span style=\"color: #4B0082;\">Can someone chart out what would need to happen to get multiple</span></span></span>\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">|<span style=\"color: #4B0082;\">ruby interpreters per process that way myself and others can do the</span></span></span>\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">|<span style=\"color: #4B0082;\">leg work?  -sc</span></span></span>\n: <span style=\"color: #007700;\">&gt; </span>\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">We have to list all global variables and pack everything into a</span></span>\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">interpreter struct (like Perl guys did once).  YACC parser still</span></span>\n: <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">uses globals, but it must be another story.</span></span>\n\nThe YACC parser can be made re-entrant by using Bison and the directive\n%pure_parser. It is also possible to pass a pointer to the yyparse()\ncall by doing:\n\n\t#define YYPARSE_PARAM parm\n\nWhere you then can access the data passed to yyparse() with the name\nparm in the rules of the grammar.\n\nMy main issue is lex, it is completely un-thread safe and is therefore\ndamn near impossible to use to allow for concurrent compilation. One\nof these days I am going to rework these tools to remove global variables\nand states to make them threadsafe. The only part of ferite I can't get\ncompletely concurrent is the compilation - I have to do higher level\nlocking.\n\n: <span style=\"color: #007700;\">Makes sense.  What I don't fully understand (I've been staring at this</span>\n: <span style=\"color: #007700;\">screen for too long and am about to go for a run, so bare with me) is:</span>\n: \n: <span style=\"color: #007700;\">*) Once the globals are contained in a struct, where will they live?</span>\n:  <span style=\"color: #007700;\">In a global list that gets locked every time a new interpreter</span>\n:  <span style=\"color: #007700;\">instance gets added to the process?</span>\n\nYou would either have to:\n\n1) Pass the structure a round the program such that it is accessable,\n   both php and ferite do it this way [not sure about others as I have\n   not looked in a while].\n\n2) Thread specific data - the global data has a key, whenever you\n   want the global data you get the pointer to by calling a method. The\n   bad thing here is the obvious speed hit. Go and see \n   \"man pthread_key_create\" for the concept.\n\nEither way is a nasty conversion [I had to do (1) in ferite]. (1) is a\nmuch better long term goal.\n\n: <span style=\"color: #007700;\">*) How will functions that need to make use of this structure identify</span>\n:  <span style=\"color: #007700;\">which stuct in the list is theirs to play with?</span>\n\nIf you just pass the 'context' to each function and onwards [at first it\nfeels very odd] you actually remove any headaches, they are all just \naccessed like local variables.\n \n: <span style=\"color: #007700;\">As an after thought, once the globals are all contained, someone with</span>\n: <span style=\"color: #007700;\">Win32 knowledge could easily implement a win32 fork call that uses</span>\n: <span style=\"color: #007700;\">CreateProcess() and then pass only the data structure to the new</span>\n: <span style=\"color: #007700;\">process.  I'm going off of what I've skimmed from the PostgreSQL guys,</span>\n: <span style=\"color: #007700;\">but that'd put another nail in the cygwin coffin.</span>\n\nWhat you are talking about there [I believe] is (2) with regard to \nthread specific data.\n\nRegards,\n\nChris\n--\n+------------------------------------------------------------------+\n| <span style=\"color: #007700;\">Chris Ross   |      chris / darkrock.co.uk | ctr / ferite.org        |</span>\n|              <span style=\"color: #007700;\">| <span style=\"color: #D2691E;\"><a href=\"http://www.darkrock.co.uk\" target=\"_top\">http://www.darkrock.co.uk</a> | <a href=\"http://www.ferite.org\" target=\"_top\">http://www.ferite.org</a> |</span></span>\n+------------------------------------------------------------------+\n\"Life is an onion and one peels away its layers crying.\"\n<a name=\"tail\"></a></pre>", "references": ["186", "187", "188"], "user": "chris@  r  o  .  .", "date": "2002-06-25 17:16:01 +0900", "reply-to": "188", "id": "191", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "matz@  b  l  g  r  (  k  i     t  m  o", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/190", "text": "<pre>Hi,\n\nIn message \"Re: Steps to get multiple interpreters per process...\"\n    on 02/06/25, Matt Armstrong &lt;matt / lickey.com&gt; writes:\n\n|<span style=\"color: #007700;\">I imagine there might also be issues with Ruby stuff that touches the</span>\n|<span style=\"color: #007700;\">process' global state: signal handlers, cwd, etc.  Multiple</span>\n|<span style=\"color: #007700;\">interpreters might have to communicate with each other somehow for</span>\n|<span style=\"color: #007700;\">this.  Or maybe not.</span>\n\nprocess-wise states are often ignored by multiple interpreter\nimplementations (they are just shared), for example by tcl and perl.\n\n\t\t\t\t\t\t\tmatz.\n<a name=\"tail\"></a></pre>", "references": ["186", "187", "189"], "user": "matz@  b  l  g  r  (  k  i     t  m  o", "date": "2002-06-25 16:39:14 +0900", "reply-to": "189", "id": "190", "channel": "ruby-core", "subject": "Re: Steps to get multiple interpreters per process..."}
{"name": "matz@  b  l  g  r  (  k  i     t  m  o", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/200", "text": "<pre>Hi,\n\nIn message \"Mem leaks in rb_str_become?\"\n    on 02/07/04, Michal Rokos &lt;m.rokos / sh.cvut.cz&gt; writes:\n\n|\t<span style=\"color: #007700;\">I'm not sure is following code doesn't mem leaks...</span>\n\n|<span style=\"color: #007700;\">-    VALUE str = rb_obj_alloc(klass);</span>\n|<span style=\"color: #007700;\">-</span>\n|<span style=\"color: #007700;\">+    VALUE str;</span>\n|<span style=\"color: #007700;\">+    </span>\n|     <span style=\"color: #007700;\">if (len &lt; 0) {</span>\n| \t<span style=\"color: #007700;\">rb_raise(rb_eArgError, \"negative string size (or size too big)\");</span>\n|     <span style=\"color: #007700;\">}</span>\n|<span style=\"color: #007700;\">-</span>\n|<span style=\"color: #007700;\">+    </span>\n|<span style=\"color: #007700;\">+    str = rb_obj_alloc(klass);</span>\n\nOK.\n\n|     <span style=\"color: #007700;\">if (ptr) {</span>\n| \t<span style=\"color: #007700;\">memcpy(RSTRING(str)-&gt;ptr, ptr, len);</span>\n|<span style=\"color: #007700;\">+    } else {</span>\n|<span style=\"color: #007700;\">+\tmemset(RSTRING(str)-&gt;ptr, '\\0', len);</span>\n|     <span style=\"color: #007700;\">}</span>\n\nOK, but using MEMZERO() macro.\n\n| <span style=\"color: #007700;\">str_new3(klass, str)</span>\n|     <span style=\"color: #007700;\">VALUE klass, str;</span>\n| <span style=\"color: #007700;\">{</span>\n|<span style=\"color: #007700;\">-    VALUE str2 = rb_obj_alloc(klass);</span>\n|<span style=\"color: #007700;\">-</span>\n|<span style=\"color: #007700;\">+    VALUE str2;</span>\n|<span style=\"color: #007700;\">+    </span>\n|<span style=\"color: #007700;\">+    Check_Type(str, T_STRING);</span>\n\nstr should alway be T_STRING, so no check is needed here.\n\n|<span style=\"color: #007700;\">+    Check_Type(orig, T_STRING);</span>\n\nditto.\n\n|<span style=\"color: #007700;\">-    str = rb_str_buf_new(len + STR_BUF_MIN_SIZE);</span>\n|<span style=\"color: #007700;\">+    str = rb_str_buf_new(len);</span>\n\nOK.\n\n|     <span style=\"color: #007700;\">if (NIL_P(str2)) {</span>\n|<span style=\"color: #007700;\">-\tRSTRING(str)-&gt;ptr = 0;</span>\n|<span style=\"color: #007700;\">+\tRSTRING(str)-&gt;ptr = 0; /* FIXME: MEM LEAKs here ???*/</span>\n\nYes.  It was leaking.  I should have moved \n\n    if (!FL_TEST(str, ELTS_SHARED)) free(RSTRING(str)-&gt;ptr);\n\nbefore updating RSTRING(str)-&gt;ptr.\n\nThank you for the changes.  I will commit them.\n\n\t\t\t\t\t\t\tmatz.\n<a name=\"tail\"></a></pre>", "references": ["199"], "user": "matz@  b  l  g  r  (  k  i     t  m  o", "date": "2002-07-05 00:28:07 +0900", "reply-to": "199", "id": "200", "channel": "ruby-core", "subject": "Re: Mem leaks in rb_str_become?"}
{"name": "Jim Freeze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2827", "text": "<pre>Does the current installation of Ruby have this problem?\n\n&gt; <span style=\"color: #007700;\">cat test.rb</span>\n\nrequire 'fileutils'\n\nDir.mkdir(\"fred\")\nDir.mkdir(\"neighbor\")\n\nFileUtils.ln_s(\"../neighbor\",\"fred/upandover\")\n\nFileUtils.rm_rf(\"fred\")\n\n&gt; <span style=\"color: #007700;\">ruby -v test.rb </span>\nruby 1.8.0 (2003-08-04) [sparc-solaris2.8]\n/usr/local/lib/ruby/1.8/fileutils.rb:583:in `rmdir': Not a directory -\nfred/upandover (Errno::ENOTDIR)\n        from /usr/local/lib/ruby/1.8/fileutils.rb:583:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:577:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:573:in `foreach'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:573:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:534:in `rm_r'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:526:in `each'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:526:in `rm_r'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:550:in `rm_rf'\n        from test.rb:9\n\n\n\n-- \nJim Freeze\nRuby. The little language that could.\nWhen a fellow says, \"It ain't the money but the principle of the\nthing,\" it's the money.\n\t\t-- Kim Hubbard\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "jim@  e  e  r", "date": "2004-04-29 13:56:59 +0900", "reply-to": "", "id": "2827", "channel": "ruby-core", "subject": "[jim@freeze.org: FileUtils Bug in 1.8.0]"}
{"name": "matz@  b  l  g  r  (  k  i     t  m  o", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2826", "text": "<pre>Hi,\n\nIn message \"[PATCH] ruby-mode.el indentation fix\"\n    on 04/04/29, George Ogata &lt;g_ogata / optushome.com.au&gt; writes:\n\n|<span style=\"color: #007700;\">This hopefully solves an indentation bug in cases like:</span>\n|\n|<span style=\"color: #007700;\">if not_contrived?(x)</span>\n|  <span style=\"color: #007700;\">oops</span>\n|<span style=\"color: #007700;\">end</span>\n|\n|<span style=\"color: #007700;\">The 'oops' line was wrongly indented.</span>\n\nThank you.\n\n\t\t\t\t\t\t\tmatz.\n\n<a name=\"tail\"></a></pre>", "references": ["2825"], "user": "matz@  b  l  g  r  (  k  i     t  m  o", "date": "2004-04-29 00:33:20 +0900", "reply-to": "2825", "id": "2826", "channel": "ruby-core", "subject": "Re: [PATCH] ruby-mode.el indentation fix"}
{"name": "Minero Aoki", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2838", "text": "<pre>Hi Jim,\n\n  In mail \"Bug in FileUtils - apathy or bad email\"\n    Jim Freeze &lt;jim / freeze.org&gt; wrote:\n\n&gt; <span style=\"color: #007700;\">I've posted on this three times and have yet to see a response.</span>\n&gt; <span style=\"color: #007700;\">Are my emails getting through or is this of no interest to anyone?</span>\n\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">/usr/local/lib/ruby/1.8/fileutils.rb:583:in `rmdir': Not a directory -</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">fred/upandover (Errno::ENOTDIR)</span></span>\n\nI'm sorry, I was missed your mails...\nThis bug was fixed in 1.8/1.9 CVS HEAD:\n\n~/tmp % ls -l\ndrwxr-xr-x    2 aamine   users        4096 Apr 30 20:00 a\ndrwxr-xr-x    2 aamine   users        4096 Apr 30 20:00 b\n~/tmp % ls -l a\ntotal 0\nlrwxrwxrwx    1 aamine   users           4 Apr 30 20:00 linktodir -&gt; ../b\n~/tmp % ruby -rfileutils -e 'FileUtils.rm_rf \"a\"'\n~/tmp % echo $?\n0\n\n\nBest Regards,\nMinero Aoki\n\n<a name=\"tail\"></a></pre>", "references": ["2830"], "user": "aamine@  v  u  .  t", "date": "2004-04-30 20:05:33 +0900", "reply-to": "2830", "id": "2838", "channel": "ruby-core", "subject": "Re: Bug in FileUtils - apathy or bad email"}
{"name": "ts", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2837", "text": "<pre>&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt;<span style=\"color: #F000F0;\">&gt; \"J\" == Jim Freeze &lt;jim / freeze.org&gt; writes:</span></span></span></span>\n\nJ&gt; <span style=\"color: #007700;\">I've posted on this three times and have yet to see a response.</span>\nJ&gt; <span style=\"color: #007700;\">Are my emails getting through or is this of no interest to anyone?</span>\n\n Well, the problem is perhaps here\n\nsvg% cat b.rb\n\nrequire 'fileutils'\n\nDir.mkdir(\"fred\")\nDir.mkdir(\"neighbor\")\n\nFileUtils.ln_s(\"../neighbor\",\"fred/upandover\")\n\nFileUtils.rm_rf(\"fred\")\nsvg% \n\nsvg% ruby -v b.rb\nruby 1.8.1 (2003-12-25) [i686-linux]\n/usr/local/lib/ruby/1.8/fileutils.rb:591:in `rmdir': Not a directory - fred/upandover (Errno::ENOTDIR)\n        from /usr/local/lib/ruby/1.8/fileutils.rb:591:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:585:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:581:in `foreach'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:581:in `remove_dir'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:542:in `rm_r'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:534:in `each'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:534:in `rm_r'\n        from /usr/local/lib/ruby/1.8/fileutils.rb:558:in `rm_rf'\n        from b.rb:9\nsvg% \n\nsvg% export PATH=/home/ts/local/r181/bin:$PATH\nsvg%\n\nsvg% ruby -v b.rb\nruby 1.8.1 (2004-04-24) [i686-linux]\nsvg% \n\n\nGuy Decoux\n\n<a name=\"tail\"></a></pre>", "references": ["2830"], "user": "decoux@  u  n  n  .", "date": "2004-04-30 19:58:50 +0900", "reply-to": "2830", "id": "2837", "channel": "ruby-core", "subject": "Re: Bug in FileUtils - apathy or bad email"}
{"name": "\"Sean E. Russell\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2836", "text": "<pre>--Boundary-02=_i7ckAKl0C6lqvAU\nContent-Type: text/plain;\n  charset=\"iso-8859-1\"\nContent-Transfer-Encoding: quoted-printable\nContent-Disposition: inline\n\nOn Thursday 29 April 2004 17:39, Warren Brown wrote:\n&gt;     <span style=\"color: #007700;\">I'm don't have a Ruby installation where I am right now, but it</span>\n&gt; <span style=\"color: #007700;\">looks like you are creating a symbolic link to the nonexistent directory</span>\n&gt; <span style=\"color: #007700;\">\"../neighbor\" instead of the directory you created \"./neighbor\".  If so,</span>\n&gt; <span style=\"color: #007700;\">the error message looks correct.</span>\n\nI don't know if your interpretation is correct.  The fact that the link end=\n is=20\nnon-existant shouldn't preclude you from removing it.\n\nPut another way, if I do the same thing in a shell script, I get no errors:\n\n121.162)~/tmp% mkdir fred\n121.162)~/tmp% mkdir neighbor\n121.162)~/tmp% ln -s ../neighbor fred/upandover\n121.162)~/tmp% rm -rf fred\n121.162)~/tmp%=20\n\nI'd expect Ruby to work the same way, so I'd agree that this is a bug.\n\nBy the way, it really shouldn't matter what \"neighbor\" is.  This should als=\no=20\nwork:\n\n\tDir.mkdir(\"fred\")\n\tFileUtils.ln_s(\"/non/existant/directory\", \"fred/foo\" )\n\tFileUtils.rm_rf( \"fred\" )   # Should still work\n\n=2D-=20\n### SER  =20\n### Deutsch|Esperanto|Francaise|Linux|XML|Java|Ruby|Aikido\n### <a href=\"http://www.germane-software.com/~ser\" target=\"_top\">http://www.germane-software.com/~ser</a>  jabber.com:ser  ICQ:83578737=20\n### GPG: <a href=\"http://www.germane-software.com/~ser/Security/ser_public.gpg\" target=\"_top\">http://www.germane-software.com/~ser/Security/ser_public.gpg</a>\n\n--Boundary-02=_i7ckAKl0C6lqvAU\nContent-Type: application/pgp-signature\nContent-Description: signature\n\n-----BEGIN PGP SIGNATURE-----\nVersion: <span style=\"color: #007700;\">GnuPG v1.2.4 (GNU/Linux)</span>\n\niD8DBQBAkc7iP0KxygnleI8RAkcrAKCbn1Ss5dqdGdk9ypHr9kJCF/O9tACguQnI\n/IOHM6ek6lOlsduKTEVICMo=\n=6w2x\n-----END PGP SIGNATURE-----\n\n--Boundary-02=_i7ckAKl0C6lqvAU--\n\n<a name=\"tail\"></a></pre>", "references": ["2832"], "user": "ser@  r  n  s  t  r  c", "date": "2004-04-30 12:58:38 +0900", "reply-to": "2832", "id": "2836", "channel": "ruby-core", "subject": "Re: Bug in FileUtils - apathy or bad email"}
{"name": "Jim Freeze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2835", "text": "<pre>On Friday, 30 April 2004 at  6:39:00 +0900, Warren Brown wrote:\n&gt; <span style=\"color: #007700;\">Jim,</span>\n&gt; \n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">Dir.mkdir(\"fred\")</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">Dir.mkdir(\"neighbor\")</span></span>\n&gt; <span style=\"color: #007700;\">&gt; </span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">FileUtils.ln_s(\"../neighbor\",\"fred/upandover\")</span></span>\n&gt; <span style=\"color: #007700;\">&gt; </span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">FileUtils.rm_rf(\"fred\")</span></span>\n&gt; <span style=\"color: #007700;\">&gt; </span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">ruby -v test.rb </span></span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">ruby 1.8.0 (2003-08-04) [sparc-solaris2.8]</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">/usr/local/lib/ruby/1.8/fileutils.rb:583:in `rmdir': Not a directory -</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">fred/upandover (Errno::ENOTDIR)</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">...</span></span>\n&gt; \n&gt;     <span style=\"color: #007700;\">I'm don't have a Ruby installation where I am right now, but it</span>\n&gt; <span style=\"color: #007700;\">looks like you are creating a symbolic link to the nonexistent directory</span>\n&gt; <span style=\"color: #007700;\">\"../neighbor\" instead of the directory you created \"./neighbor\".  If so,</span>\n&gt; <span style=\"color: #007700;\">the error message looks correct.</span>\n\n\"fred\" and \"neighbor\" are siblings. The link inside \"fred\" points\nup and over to \"neighbor\".\n\nMy directory shows this:\n\n   jfreeze@rabbit ~/tmp 11 -&gt; ls -dF fred nei*\n   fred/           neighbor/\n   jfreeze@rabbit ~/tmp 12 -&gt; dir fred\n   total 4\n   drwxr-xr-x  2 jfreeze  jfreeze  512 Apr 28 23:58 ./\n   drwxr-xr-x  7 jfreeze  jfreeze  512 Apr 29 01:25 ../\n   lrwxr-xr-x  1 jfreeze  jfreeze   11 Apr 28 23:58 upandover@ -&gt; ../neighbor\n\n\n-- \nJim Freeze\nThose of you who think you know everything are very annoying to those\nof us who do.\n\n<a name=\"tail\"></a></pre>", "references": ["2832"], "user": "jim@  e  e  r", "date": "2004-04-30 12:50:18 +0900", "reply-to": "2832", "id": "2835", "channel": "ruby-core", "subject": "Re: Bug in FileUtils - apathy or bad email"}
{"name": "jm", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2834", "text": "<pre>If I may endulge  in the use of someone's time for a bit. I've narrowed \na bug in my module down to the following line, tested against ruby 1.6,\n\nrb_struct_aset(rb_vfr_obj, rb_str_new2(FT_XFIELD_ASC_DSTPORT),\n                  INT2NUM(tmp32));\n\nI either get\n\n./vftest.rb:57: [BUG] rb_gc_mark(): unknown data type 0x24(0xbffff020) \nnon object\nruby 1.6.8 (2002-12-24) [i386-linux-gnu]\nAborted\n\nor\n\n./vftest.rb:57: [BUG] Segmentation fault\nruby 1.6.8 (2002-12-24) [i386-linux-gnu]\nAborted\n\nDepending on how many printf() statements I use for debugging output. \nI'm assuming then that the bug is with the way I'm using rb_struct \ncalls as everything else is some what similar to the examples in the \npickaxe box and that the printf() statements are simply altering the \ntiming, hence the change in the errors above.\n\nSo I was hoping someone could tell me if the following is valid, after \ncalling rb_struct_define with a list of cstrings,\n\nrb_vfr_obj = rb_struct_new(vflowrec, 0);\n\nand then to use rb_struct_aset() as above.\n\nAny pointer in the right direction welcome.\n\nJeff.\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "jm@  a  a  .  m  u", "date": "2004-04-30 08:44:25 +0900", "reply-to": "", "id": "2834", "channel": "ruby-core", "subject": "rb_struct_new example needed"}
{"name": "\"Kent S.\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2833", "text": "<pre>Since Exception#to_str method has been removed in favor of #message \nmethod,\ntcltklib extension should be updated accordingly.\n\nIndex: <span style=\"color: #007700;\">tcltklib.c</span>\n===================================================================\nRCS file: /src/ruby/ext/tcltklib/tcltklib.c,v\nretrieving revision 1.52\ndiff -u -r1.52 tcltklib.c\n--- tcltklib.c  29 Mar 2004 07:54:26 -0000      1.52\n+++ tcltklib.c  29 Apr 2004 22:13:02 -0000\n@@ -833,14 +833,15 @@\n          VALUE eclass = rb_obj_class(arg.failed);\n         DUMP1(\"(rb_eval_string result) failed\");\n         Tcl_ResetResult(interp);\n-       Tcl_AppendResult(interp, StringValuePtr(arg.failed), \n(char*)NULL);\n          if (eclass == eTkCallbackBreak) {\n             return TCL_BREAK;\n         } else if (eclass == eTkCallbackContinue) {\n             return TCL_CONTINUE;\n         } else if (eclass == rb_eSystemExit) {\n+           VALUE msg = rb_funcall(arg.failed, rb_intern(\"message\"), 0);\n+            Tcl_AppendResult(interp, StringValuePtr(msg), (char*)NULL);\n             Tcl_Eval(interp, \"destroy .\");\n-           rb_raise(rb_eSystemExit, StringValuePtr(arg.failed));\n+           rb_raise(rb_eSystemExit, StringValuePtr(msg));\n         } else {\n             return TCL_ERROR;\n         }\n\n\nCheers,\nKent.\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "ksibilev@  l  o  h  e", "date": "2004-04-30 07:21:22 +0900", "reply-to": "", "id": "2833", "channel": "ruby-core", "subject": "tcktklib.c patch"}
{"name": "Mauricio Fern\u75a3dez", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2879", "text": "<pre>On Sun, May 16, 2004 at 05:00:33PM +0900, Mauricio Fern?ndez wrote:\n&gt; <span style=\"color: #007700;\">I'm told that this doesn't download the file correctly under windows</span>\n&gt; <span style=\"color: #007700;\">(only a few KB are dled). On visual inspection, the associated Tempfile</span>\n&gt; <span style=\"color: #007700;\">is not complete either, so the same behavior is observed when using</span>\n&gt; <span style=\"color: #007700;\">is.gets(nil) or a loop with eof?.</span>\n\nThe bug has been traced back to Tempfile, which doesn't use the binary\nmode for the underlying file. IMHO it should since the tempfile isn't\nmeant to be seen by other processes, so CRLF translation (and other\noddities such as ETB) makes no sense.\n\n\n--- tempfile.rb 2004-04-17 20:41:57.000000000 +0200\n+++ tempfile.rb.new     2004-05-16 13:16:08.000000000 +0200\n@@ -52,7 +52,9 @@\n     @clean_proc = Tempfile.callback(@data)\n     ObjectSpace.define_finalizer(self, @clean_proc)\n\n-    @tmpfile = File.open(tmpname, File::RDWR|File::CREAT|File::EXCL, 0600)\n+    @tmpfile = File.open(tmpname,\n+                         File::RDWR|File::CREAT|File::EXCL|\n+                         (File::BINARY rescue 0), 0600)\n     @tmpname = tmpname\n     @@cleanlist &lt;&lt; @tmpname\n     @data[1] = @tmpfile\n@@ -66,10 +68,10 @@\n     Dir.rmdir(lock)\n   end\n\n-  # Opens or reopens the file with mode \"r+\".\n+  # Opens or reopens the file with mode \"rb+\".\n   def open\n     @tmpfile.close if @tmpfile\n-    @tmpfile = File.open(@tmpname, 'r+')\n+    @tmpfile = File.open(@tmpname, 'rb+')\n     @data[1] = @tmpfile\n     __setobj__(@tmpfile)\n   end\n\n-- \nRunning Debian GNU/Linux Sid (unstable)\nbatsman dot geo at yahoo dot com\n\nAre Linux users lemmings collectively jumping off of the cliff of\nreliable, well-engineered commercial software?\n\t-- Matt Welsh\n\n<a name=\"tail\"></a></pre>", "references": ["2878"], "user": "batsman.geo@  h  .  m", "date": "2004-05-16 20:17:42 +0900", "reply-to": "2878", "id": "2879", "channel": "ruby-core", "subject": "[PATCH] tempfile.rb (was Re: Bug in open-uri under win32 (?))"}
{"name": "Mauricio Fern\u75a3dez", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2878", "text": "<pre>\n\nbatsman@tux-chan:/tmp$ cat sdfsdfsd.rb\nrequire 'open-uri'\ndest = \"test.rps\"\nsrc = \"<a href=\"http://thekode.net/misc/rpa/types.rps\" target=\"_top\">http://thekode.net/misc/rpa/types.rps</a>\"\n\nFile.open(dest, \"wb\") do |f|\n    open(src, \"rb\") do |is|\n        loop do\n            dat = is.read(4096)\n            break unless dat\n            f.write dat\n        end\n    end\nend\n\nbatsman@tux-chan:/tmp$ ruby sdfsdfsd.rb\nbatsman@tux-chan:/tmp$ ls -l test.rps\n-rw-r--r--    1 batsman  batsman     20480 May 16 09:56 test.rps\nbatsman@tux-chan:/tmp$ md5sum test.rps\neb743caa3f0ade41c1bd8b9e3a602eba  test.rps\n\n\nI'm told that this doesn't download the file correctly under windows\n(only a few KB are dled). On visual inspection, the associated Tempfile\nis not complete either, so the same behavior is observed when using\nis.gets(nil) or a loop with eof?.\n\n\n-- \nRunning Debian GNU/Linux Sid (unstable)\nbatsman dot geo at yahoo dot com\n\nAnd Bruce is effectively building BruceIX\n\t-- Alan Cox\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "batsman.geo@  h  .  m", "date": "2004-05-16 17:00:33 +0900", "reply-to": "", "id": "2878", "channel": "ruby-core", "subject": "Bug in open-uri under win32 (?)"}
{"name": "\"Kent S.\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2877", "text": "<pre>Another problem:\n\n$ irb\nirb(main):001:0&gt; require 'yaml'\n=&gt; <span style=\"color: #007700;\">true</span>\nirb(main):002:0&gt; class A\nirb(main):003:1&gt; attr_accessor :text\nirb(main):004:1&gt; end\n=&gt; <span style=\"color: #007700;\">nil</span>\nirb(main):005:0&gt; a = A.new\n=&gt; <span style=\"color: #007700;\">#&lt;A:0x60cc3c&gt;</span>\nirb(main):006:0&gt; a.text =&lt;&lt;EOS\nirb(main):007:0\" line 1\nirb(main):008:0\" line 2\nirb(main):009:0\" EOS\n=&gt; <span style=\"color: #007700;\">\"line 1\\nline 2\\n\"</span>\nirb(main):010:0&gt; YAML.load(a.to_yaml)\nArgumentError: <span style=\"color: #007700;\">parse error on line 6, col -1: `'</span>\n         from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'\n         from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'\n         from (irb):10\nirb(main):011:0&gt; a.to_yaml\n=&gt; <span style=\"color: #007700;\">\"--- !ruby/object:A \\ntext: &gt;\\nline 1\\n\\nline 2\\n\\n\"</span>\nirb(main):012:0&gt;\n\n\nCheers,\nKent.\n\nOn May 15, 2004, at 4:07 PM, Kent S. wrote:\n\n&gt; <span style=\"color: #007700;\">It seems that the last yaml update broke ri system:</span>\n&gt;\n&gt; <span style=\"color: #007700;\">$ ri local</span>\n&gt; <span style=\"color: #007700;\">/usr/local/lib/ruby/1.9/yaml.rb:158:in `instance_variable_set': </span>\n&gt; <span style=\"color: #007700;\">`@Time.local( year [, month, day, hour, min, sec, usec] ) =&gt; time </span>\n&gt; <span style=\"color: #007700;\">(NameError)</span>\n&gt; <span style=\"color: #007700;\">Time.local( sec, min, hour, day, month, year, wday, yday, isdst,</span>\n&gt; <span style=\"color: #007700;\">tz ) =&gt; time</span>\n&gt; <span style=\"color: #007700;\">Time.mktime( year, month, day, hour, min, sec, usec )   =&gt; time</span>\n&gt;\n&gt; <span style=\"color: #007700;\">visibility' is not allowed as an instance variable name from </span>\n&gt; <span style=\"color: #007700;\">/usr/local/lib/ruby/1.9/yaml.rb:158:in `object_maker'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml.rb:157:in `each_pair'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml.rb:157:in `object_maker'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml/rubytypes.rb:36</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml/rubytypes.rb:34:in `call'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/bin/ri:16:in `transfer'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'</span>\n&gt;          <span style=\"color: #007700;\">... 6 levels...</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:122:in </span>\n&gt; <span style=\"color: #007700;\">`process_args'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:121:in `each'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:121:in </span>\n&gt; <span style=\"color: #007700;\">`process_args'</span>\n&gt;         <span style=\"color: #007700;\">from /usr/local/bin/ri:21</span>\n&gt;\n&gt;\n&gt; <span style=\"color: #007700;\">Cheers,</span>\n&gt; <span style=\"color: #007700;\">Kent.</span>\n&gt;\n&gt;\n\n\n<a name=\"tail\"></a></pre>", "references": ["2876"], "user": "ksibilev@  l  o  h  e", "date": "2004-05-16 05:25:54 +0900", "reply-to": "2876", "id": "2877", "channel": "ruby-core", "subject": "Re: yaml last update"}
{"name": "\"Kent S.\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2876", "text": "<pre>It seems that the last yaml update broke ri system:\n\n$ ri local\n/usr/local/lib/ruby/1.9/yaml.rb:158:in `instance_variable_set': \n`@Time.local( year [, month, day, hour, min, sec, usec] ) =&gt; time \n(NameError)\nTime.local( sec, min, hour, day, month, year, wday, yday, isdst,\ntz ) =&gt; time\nTime.mktime( year, month, day, hour, min, sec, usec )   =&gt; time\n\nvisibility' is not allowed as an instance variable name from \n/usr/local/lib/ruby/1.9/yaml.rb:158:in `object_maker'\n         from /usr/local/lib/ruby/1.9/yaml.rb:157:in `each_pair'\n         from /usr/local/lib/ruby/1.9/yaml.rb:157:in `object_maker'\n         from /usr/local/lib/ruby/1.9/yaml/rubytypes.rb:36\n         from /usr/local/lib/ruby/1.9/yaml/rubytypes.rb:34:in `call'\n         from /usr/local/bin/ri:16:in `transfer'\n         from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'\n         from /usr/local/lib/ruby/1.9/yaml.rb:30:in `load'\n          ... 6 levels...\n         from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:122:in \n`process_args'\n         from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:121:in `each'\n         from /usr/local/lib/ruby/1.9/rdoc/ri/ri_driver.rb:121:in \n`process_args'\n         from /usr/local/bin/ri:21\n\n\nCheers,\nKent.\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "ksibilev@  l  o  h  e", "date": "2004-05-16 05:07:58 +0900", "reply-to": "", "id": "2876", "channel": "ruby-core", "subject": "yaml last update"}
{"name": "\"=?windows-1251?Q?=D1=EB=E5=EF=ED=E5=E2_=C2=EB=E0=E4=E8=EC=E8=F0?=\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2864", "text": "<pre>Hello,\n\nthe following code eats up more and more memory as it works, pretty \nfast. It shouldn't.\n\n\nrequire 'weakref'\n\nclass A\n   attr_accessor :child\n\n   def foo\n     @child = B.new\n     @child.call\n   end\nend\n\nclass B\n   def call\n     callcc do |cc|\n       @cont = cc\n     end\n   end\n\n   def answer(obj)\n     @cont.call(obj)\n   end\nend\n\ndef purge(array)\n   array.delete_if {|x| not x.weakref_alive?}\nend\n\na = A.new\narr = []\nloop { a.foo; arr &lt;&lt; WeakRef.new(a.child); purge(arr)}\n\n\nIf we comment out the line @cont = cc, the leak goes away. If we don't \nsave weakrefs at all, the leak also goes away. I don't understand it.\n\nThis combination (weakrefs + continuations) is not contrived: it is \nused in the Borges web framework, for an important purpose.\n\nVladimir Slepnev\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "slepnev_v@  m  e  r", "date": "2004-05-12 03:28:09 +0900", "reply-to": "", "id": "2864", "channel": "ruby-core", "subject": "memory leak when using continuations+weakrefs?"}
{"name": "Florian Frank", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2875", "text": "<pre>Tempfile seems to use DelegateClass instead of SimpleDelegator in Ruby\n1.8.2. This has unpleasant effects on the Tempfile#open method:\n\n(flori@eta:flori/ 0)$ cat foo.rb ; ruby -v foo.rb \nrequire 'tempfile'\nt = Tempfile.open('test')\nt = t.open\nruby 1.8.2 (2004-05-14) [i386-freebsd4.9]\n/usr/local/stow/ruby/lib/ruby/1.8/tempfile.rb:74:in `open': undefined\nmethod `__setobj__' for #&lt;File:/tmp/test50304.0 (closed)&gt;\n(NoMethodError)\n        from foo.rb:3\n\n-- \no=lambda{|o|p o};O=Struct.new(:a,:b,:c);e=%q(_(?h,_(?h,_(?\\ ,_(?s,_(?u,_(74)),\n_(?t)),_(?t,_(?o,_(?n,_(?a))))),_(82,_(?r,_(?e),_(32)),_(32,_(98,_(?u),_(?y)))\n)),_(?r,_(99,_(97),_(?k,nil,_(?e))),_(10))));def _(*a)O.new(*a)end;class O;def\ne(&amp;o)b&amp;&amp;b.e(&amp;o);o[a];c&amp;&amp;c.e(&amp;o)end;end;def p(o)print(''&lt;&lt;o)end;eval(e).e(&amp;o)\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "flori@  x  p  g  e", "date": "2004-05-15 10:58:15 +0900", "reply-to": "", "id": "2875", "channel": "ruby-core", "subject": "Tempfile problem"}
{"name": "Tanaka Akira", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2863", "text": "<pre>I found that RDoc doesn't make a link for a parent class in following\ncase.\n\n% cat t.rb\nmodule M1\n  class C1\n  end\n  module M2\n    class C2 &lt; C1\n    end\n  end\nend\n% rdoc -q t.rb\n% lynx -dump doc/classes/M1/M2/C2.html\n\nM1::M2::C2 ^(Class)\n\n   In:     [1]t.rb \n   Parent: C1\n\n   [2][Validate]\n\nReferences\n\n   1. file://localhost/tmp/a/doc/files/t_rb.html\n   2. <a href=\"http://validator.w3.org/check/referer\" target=\"_top\">http://validator.w3.org/check/referer</a>\n\n\"C1\" should be a link to doc/classes/M1/C1.html.\n-- \nTanaka Akira\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "akr@  7  o", "date": "2004-05-11 12:27:23 +0900", "reply-to": "", "id": "2863", "channel": "ruby-core", "subject": "RDoc: parent class link problem."}
{"name": "Ryan Davis", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/2874", "text": "<pre>I have a lot of code that opens itself up if it is being unit tested at \nthe time. It usually looks like:\n\n\tprotected unless $TESTING\n\nrdoc -D was showing that it was only expecting a symbol or string after \na visibility specifier via parse_symbol_in_arg. The following patch \nallows statements like the above to ignore any conditional modifiers \nand still understand the intended visibility as long as it is written \nin the default case:\n\ndiff -d -u -r1.6.2.17 parse_rb.rb\n--- parsers/parse_rb.rb\t7 May 2004 13:14:58 -0000\t1.6.2.17\n+++ parsers/parse_rb.rb\t14 May 2004 20:33:28 -0000\n@@ -2453,6 +2453,8 @@\n        if peek_tk.kind_of? TkNL\n  #        error(\"Missing argument\") if singleton\n          container.ongoing_visibility = vis\n+      elsif peek_tk.kind_of? TkUNLESS_MOD or peek_tk.kind_of? TkIF_MOD\n+        container.ongoing_visibility = vis\n        else\n          args = parse_symbol_arg\n          container.set_visibility_for(args, vis, singleton)\n\nI would also like to find some way to make %params% extend w/ a space \nin front of parenthesis are not used for the method definition. \nOtherwise the html renderered looks like \"methodargs\" with \"method\" \nbeing bold. But I can't figure this one out in my current exhausted \nmental state.\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "ryand-ruby@  n  i  r  o", "date": "2004-05-15 06:08:10 +0900", "reply-to": "", "id": "2874", "channel": "ruby-core", "subject": "minor tweak to visibility parser in rdoc"}
{"name": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2006", "text": "<pre>Hi,\n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/1999\">[ruby-talk:01999]</a> slice! ate my machine!\"\n    on 00/03/17, Dave Thomas &lt;Dave / thomases.com&gt; writes:\n\n|<span style=\"color: #007700;\">Don't try this one unless you have a spare shell window open and are</span>\n|<span style=\"color: #007700;\">quick at typing 'kill -9 nnnn'!</span>\n\nSorry, here's the patch.\n\n--- string.c.sav\tWed Feb  2 08:51:02 2000\n@@ -837,3 +893,3 @@\n \n-    if (len != RSTRING(val)-&gt;len) {\n+    if (RSTRING(val)-&gt;len != len &amp;&amp; RSTRING(val)-&gt;len &gt; beg + len) {\n \tmemmove(RSTRING(str)-&gt;ptr + beg + RSTRING(val)-&gt;len,\n<a name=\"tail\"></a></pre>", "references": ["1999"], "user": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "date": "2000-03-19 01:07:32 +0900", "reply-to": "1999", "id": "2006", "channel": "ruby-talk", "subject": "[ruby-talk:02006] Re: slice! ate my machine!"}
{"name": "Andrew Hunt", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2005", "text": "<pre>\nHi everyone,\n\nDoes Ruby have any sort of standard for testing extension modules\n(or even pure-Ruby code that is packaged separately?)\n\nOne of the things that I think has contributed greatly to Perl's\nsuccess is their standard of supporting \"make test\" with a few\nconventions such that all modules can be tested in a similar manner.\n\nI see that someone has been working on porting the xUnit test suite to \nRuby, perhaps we could do something with that?  Certainly extension\nmodules at least should have some standard \"make test\" target to\nverify proper operation.\n\nAny thoughts?\n\n/\\ndy\n\n--\nAndrew Hunt, The Pragmatic Programmers, LLC.\nInnovative Object-Oriented Software Development\nweb:   <span style=\"color: #007700;\"><a href=\"http://www.pragmaticprogrammer.com\" target=\"_top\">http://www.pragmaticprogrammer.com</a>   email: andy / pragmaticprogrammer.com</span>\n--\nOur New Book: \"The Pragmatic Programmer\" Published by Addison-Wesley Oct 1999\n              (see www.pragmaticprogrammer.com/ppbook)\n--\n<a name=\"tail\"></a></pre>", "references": [""], "user": "Andy@  o  h  .  m", "date": "2000-03-18 08:27:24 -0500", "reply-to": "", "id": "2005", "channel": "ruby-talk", "subject": "[ruby-talk:02005] Extension and other testing"}
{"name": "ts", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2022", "text": "<pre>\n\n I need to access ruby_errinfo and initially I've written (ruby_errinfo is\n not in ruby.h)\n\n[...]\n extern VALUE ruby_errinfo;\n[...]\n\n Finally I use rb_global_entry() but its definition is also not in ruby.h.\nIs there another way to access this variable ?\n\n I want to do something like this :\n\naestivum% cat toto.c\n#include &lt;ruby.h&gt;\n\nstatic struct global_entry *errinfo;\nstatic VALUE toto_eCatch;\nstatic VALUE titi() { rb_raise(toto_eCatch, \"ESSAI\"); }\nstatic VALUE t_catch() { return rb_gvar_get(errinfo); }\n\nstatic VALUE\ntoto()\n{\n    VALUE c = rb_rescue(titi, 0, t_catch, 0);\n    if (rb_obj_is_kind_of(c, toto_eCatch))\n        rb_warn(\"OK kind_of\");\n    return Qtrue;\n}\n\nInit_toto()\n{\n    toto_eCatch = rb_define_class(\"TotoCatch\", rb_eStandardError);\n    errinfo = (struct global_entry *)rb_global_entry(rb_intern(\"$!\"));\n    toto();\n}\naestivum% \n\n\nGuy Decoux\n<a name=\"tail\"></a></pre>", "references": [""], "user": "decoux@  u  n  n  .", "date": "2000-03-19 12:10:34 +0100", "reply-to": "", "id": "2022", "channel": "ruby-talk", "subject": "[ruby-talk:02022] rb_global_entry"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2021", "text": "<pre>From: <span style=\"color: #007700;\">SUGIHARA Hiroshi (SuHi or SugHimsi) &lt;manamist / white.diamond.ne.jp&gt;</span>\n\n&gt; <span style=\"color: #007700;\">SugHimsi(%HeIsSaidJustToLoseHisPatienceOnThisSubject;-).</span>\n&gt;\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">Mr. Schneiker wrote:</span></span>\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;</span></span>\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">Is there an interim version (however primitive) of the English Ruby/Gtk</span></span></span>\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">Tutorial available?</span></span></span>\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">(snip)</span></span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">This document is written over 6 months ago, but I think it still</span>\ninvaluable\n&gt; <span style=\"color: #007700;\">for introductory study on Ruby/Gtk.</span>\n\nAs someone very new to both Ruby and GTK, I certainly agree.\n\nThank you very much!\n\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["*", "*", "*", "*", "1513", "1527", "1989", "1992", "2014"], "user": "schneiker@  m  n", "date": "2000-03-19 01:29:26 -0600", "reply-to": "", "id": "2021", "channel": "ruby-talk", "subject": "[ruby-talk:02021] Re: English Ruby/Gtk Tutorial?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2020", "text": "<pre>From: <span style=\"color: #007700;\">Yukihiro Matsumoto &lt;matz / netlab.co.jp&gt;</span>\n...\n&gt; <span style=\"color: #007700;\">In message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2003\">[ruby-talk:02003]</a> Re: Ruby Syntax similar to other languages?\"</span>\n&gt;     <span style=\"color: #007700;\">on 00/03/18, \"Conrad Schneiker\" &lt;schneiker / jump.net&gt; writes:</span>\n&gt;\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">What's the benefit of foo.s(/pat/, \"repl\", \"g\") over foo.gsub(/pat/,</span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">\"repl\")?</span></span>\n&gt; <span style=\"color: #007700;\">|</span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">In vi, sed, and perl, you don't thing of sub and gsub as being two</span></span>\ndifferent\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">methods, but rather as a single method that is modulated by optional</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">parameters--including g, i, s, m, o, e, and x in perl (IIRC), which I</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">wouldn't want to see replaced by individual methods, since I (currently)</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">think it is much more natural to regard all of these things as variations</span></span>\non\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">a common theme.</span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">Hmm, although I think options i, s, m, o, and x should belong to</span>\n&gt; <span style=\"color: #007700;\">regexp, I can understand your opinion.</span>\n\nCould g belong to regexp as well?\n\nIf so, then foo.sub(/pat/g, \"repl\") would be fine with me.\n\nConrad\n\n\n\n<a name=\"tail\"></a></pre>", "references": ["1896", "1910", "1954", "1955", "2003", "2010"], "user": "schneiker@  m  n", "date": "2000-03-19 01:24:01 -0600", "reply-to": "", "id": "2020", "channel": "ruby-talk", "subject": "[ruby-talk:02020] Re: Ruby Syntax similar to other languages?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2019", "text": "<pre>From: <span style=\"color: #007700;\">Quinn Dunkan &lt;quinn / envy.ugcs.caltech.edu&gt;</span>\n\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">From: <span style=\"color: #4B0082;\">Yukihiro Matsumoto &lt;matz / netlab.co.jp&gt;</span></span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">What's the benefit of foo.s(/pat/, \"repl\", \"g\") over foo.gsub(/pat/,</span></span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">\"repl\")?</span></span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">In vi, sed, and perl, you don't thing of sub and gsub as being two</span></span>\ndifferent\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">methods, but rather as a single method that is modulated by optional</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">parameters--including g, i, s, m, o, e, and x in perl (IIRC), which I</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">wouldn't want to see replaced by individual methods, since I (currently)</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">think it is much more natural to regard all of these things as</span></span>\nvariations on\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">a common theme.</span></span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">Since I also use vi (actually gvim, a vastly improved GUI-based</span></span>\nextension of\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">vi) all the time and have used perl a lot in the past, \"s\" seems like</span></span>\nthe\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">simplest and most natural name for what also seems to be most naturally</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">regarded as a single method. Actually, since awk always seemed awkward</span></span>\nto me\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">even before I discovered perl, maybe I should say that because I think</span></span>\n\"s\"\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">this is a more natural way to think of substitution, I happened to like</span></span>\nthe\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">way that vi and perl do it.</span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">Well, the way ruby does things currently makes sense to me.  And ruby's</span>\n&gt; <span style=\"color: #007700;\">Regexps already support parameters: /foo/i  But 'g' doesn't make sense as</span>\na\n&gt; <span style=\"color: #007700;\">Regexp flag, it's a parameter to only the sub method.</span>\n\nDid you mean proposed parameter to the sub method? Why then would you not\nregard the i, o, p, and x flags as potential sub method parameters as well?\nHowever, from a more pattern-centric perspective, it might make more sense\nto regard 'g' as another option/al flag (i.e. as another regexp option/al\nparameter).\n\n&gt; <span style=\"color: #007700;\">I *would* argue against</span>\n&gt; <span style=\"color: #007700;\">calling the method 's', even though I too have used vim since 1.0 on the</span>\n&gt; <span style=\"color: #007700;\">amiga: <span style=\"color: #D2691E;\">sub is only two characters longer and so much more descriptive.</span></span>\nIt's\n&gt; <span style=\"color: #007700;\">fine that editors use 's', but an editor is not a general-purpose</span>\nprogramming\n&gt; <span style=\"color: #007700;\">language (have you tried to read a screenful of complicated vi macros?).</span>\n\nYou are comparing apples to orangutans, but yes. You would have to change a\nlot more than one or two methods to make Ruby code look anything even\nremotely similar.\n\n&gt; <span style=\"color: #007700;\">I like the fact that ruby is not vi, sed, and perl.</span>\n\nAnd hopefully, someday, is not awk in a similar sense either.\n\n&gt; <span style=\"color: #007700;\">So I have no problem with file://.sub vs file://.gsub  I also have no</span>\nproblem with\n&gt; <span style=\"color: #007700;\">file:<span style=\"color: #D2691E;\">//.sub('repl', g=1) or whatever.  But abbreviating to single</span></span>\ncharacters and\n&gt; <span style=\"color: #007700;\">inventing special calling semantics so you can write like a</span>\nspecial-purpose\n&gt; <span style=\"color: #007700;\">language I don't like so much.</span>\n\nNo problem. I don't care about literally using 's' instead of 'sub', I was\njust (unclearly--sorry) using \"s\" to designate the single method versus\nmultiple method perspective.\n\nIn fact, for example, except for $_ and $&amp;, I generally prefer to use the\nlonger and more self-descriptive \"use English\" versions of Perl's special\nvariables, although some of them I think are a little too long. I wish Ruby\nhad originally designed in something of a happy medium for these things.\n\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["2012"], "user": "schneiker@  m  n", "date": "2000-03-19 01:10:03 -0600", "reply-to": "", "id": "2019", "channel": "ruby-talk", "subject": "[ruby-talk:02019] Re: Ruby Syntax similar to other languages?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2018", "text": "<pre>From: <span style=\"color: #007700;\">Yukihiro Matsumoto &lt;matz / netlab.co.jp&gt;</span>\n...\n&gt;     <span style=\"color: #007700;\">on 00/03/17, \"Conrad Schneiker\" &lt;schneiker / jump.net&gt; writes:</span>\n&gt;\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">I like init too. If we do go with it though, we'll need something like</span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">a full release cycle where Ruby warns if it comes across an instance</span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">method called init--something like:</span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt;</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt;   <span style=\"color: #4B0082;\">warning: <span style=\"color: #F000F0;\">in the next release of Ruby method 'init' will acquire</span></span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt;            <span style=\"color: #4B0082;\">mystic significance and this code probably won't work</span></span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt;</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">Just to give people time to switch over.</span></span></span>\n&gt; <span style=\"color: #007700;\">|</span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">I also want to vote for 'init'.</span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">Hmm, thank you for votes.</span>\n&gt;\n&gt; <span style=\"color: #007700;\">But changing a fundamental method name like `initialize' makes me</span>\n&gt; <span style=\"color: #007700;\">nervous.  It may require thousands of programs to be rewritten.</span>\n\nWell, you may want to save these sorts of things until such time that it\nseems that you have accumulated enough of the \"I wish I had done this\noriginally\" sorts of things that you think that most people would accept a\nPerl4 --&gt; Perl5 or Python 1.6 --&gt; Python 3000 sort of transition. Although\nit was certainly temporarily inconvenient for many people, the combined\nsimplifications and extensions of the Perl4 to Perl5 transition ultimately\nboosted Perl's popularity and utility overall. (In addition to Ruby syntax\nchanges, other things that might also be changed at such a major transition\nfor Ruby might be a switch from K&amp;R C to ANSI C/ISO C++ and/or the addition\nof Unicode 3 support, and so on.) If we knew that (and what) various\nlanguage changes would be forthcoming a year or two from now, there would be\nplenty of time to give some thought to developing tools that would\nfacilitate upgrading old code, and to document such things well in advance.\n\nIf Ruby undergoes the same sort of long term growth as Perl did, then the\nvast majority of Python code that will exist 10 years from now has not yet\nbeen written, so it is important to keep in mind the importance of language\nimprovements that would make the development and support of such code easier\nand that would improve the overall quality of that code. If Perl had been\nforced to forever remain perfectly backwards compatible with Perl4, Perl\nwould not be nearly so useful, powerful, and easy to use (at least for those\nthat like it) as it is today.\n\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["1942", "1943", "1998", "2009"], "user": "schneiker@  m  n", "date": "2000-03-18 23:56:17 -0600", "reply-to": "", "id": "2018", "channel": "ruby-talk", "subject": "[ruby-talk:02018] Re: no Fixnum#new ?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2017", "text": "<pre>From: <span style=\"color: #007700;\">Andrew Hunt &lt;Andy / Toolshed.Com&gt;</span>\n...\n&gt; <span style=\"color: #007700;\">Does Ruby have any sort of standard for testing extension modules</span>\n&gt; <span style=\"color: #007700;\">(or even pure-Ruby code that is packaged separately?)</span>\n&gt;\n&gt; <span style=\"color: #007700;\">One of the things that I think has contributed greatly to Perl's</span>\n&gt; <span style=\"color: #007700;\">success is their standard of supporting \"make test\" with a few</span>\n&gt; <span style=\"color: #007700;\">conventions such that all modules can be tested in a similar manner.</span>\n\nAlso IIRC Perl (and I think Tcl, among other tools) also give a fairly\nextensive list of what sorts of \"make test\" tests pass after you build them,\nwhich increases your confidence (and that of the often less knowledgeable\nsupport people that take over from you) that things really have built\ncorrectly and that \"make test\" really did do something significant.\n\n&gt; <span style=\"color: #007700;\">I see that someone has been working on porting the xUnit test suite to</span>\n&gt; <span style=\"color: #007700;\">Ruby, perhaps we could do something with that?  Certainly extension</span>\n&gt; <span style=\"color: #007700;\">modules at least should have some standard \"make test\" target to</span>\n&gt; <span style=\"color: #007700;\">verify proper operation.</span>\n&gt;\n&gt; <span style=\"color: #007700;\">Any thoughts?</span>\n\nI think something along these lines would be a very good idea.\n\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["2005"], "user": "schneiker@  m  n", "date": "2000-03-18 23:19:54 -0600", "reply-to": "", "id": "2017", "channel": "ruby-talk", "subject": "[ruby-talk:02017] Re: Extension and other testing"}
{"name": "\"David Douthitt\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2053", "text": "<pre>| <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt; <span style=\"color: #F000F0;\">Clemens Hintze &lt;c.hintze / gmx.net&gt; 03/20/00 11:08PM &gt;&gt;&gt;</span></span></span></span>\n| <span style=\"color: #007700;\">David Douthitt writes:</span>\n| \n| <span style=\"color: #007700;\">...</span>\n| \n| <span style=\"color: #007700;\">Sorry for bothering you, but to prevent you from re-inventing the</span>\n| <span style=\"color: #007700;\">wheel again, there is a package 'filelock' in the contrib directory in</span>\n| \n|    <span style=\"color: #007700;\"><a href=\"ftp://ftp.netlab.co.jp/pub/lang/ruby/contrib/filelock.rb.\" target=\"_top\">ftp://ftp.netlab.co.jp/pub/lang/ruby/contrib/filelock.rb.</a> </span>\n| \n| <span style=\"color: #007700;\">Perhaps it is what you have searched?</span>\n| \n| <span style=\"color: #007700;\">But then, nobody has told me if you like to re-invent the wheel again</span>\n| <span style=\"color: #007700;\">;-)</span>\n\nOnly sometimes :-)\n\nYet, I don't think your script is what I had in mind.  I'm not looking\nto \"lock a file\" - but to create a UNIX-style lockfile in\n(typical example) /var/spool/locks/ - as it is under HP-UX 10.20 here.\nThis looks like your class LockFile but your code seems quite complex.\nI'm not sure that all that is what I needed.  My class Lock turned out\nto be much simpler I think.\n\nThat first line is a marvel!  \"/bin/env ruby\" ... hmmm!\n\nHere's my code:\n\n#!/opt/ruby/bin/ruby\n\nclass Lock\n   attr_accessor :locked_up, :lockdir, :lockfile\n\n   def initialize (lockf = nil)\n      @locked_up = false\n      @lockdir = \"/var/spool/locks\"\n      if (lockf == nil)\n         @lockfile = (@lockdir + \"/\" + File.basename($0) + \".lock\")\n      else\n         @lockfile = (@lockdir + \"/\" + lockf + \".lock\")\n      end\n   end\n\n   def setlock (lockf = @lockfile)\n      raise \"Lockfile not set!\" if lockf == nil;\n      raise \"Lock failed!\" if\n         ! system(\"set -o noclobber ; cat /dev/null 2&gt; /dev/null &gt; #{lockf}\")\n\n      at_exit { self.unlock }\n      @locked_up = true\n   end\n\n   def locked?\n      test(?e, @lockfile)\n   end\n\n   def Lock.locked? (lockf)\n      test(?e, \"/var/spool/locks/\" + lockf)\n   end\n\n   def locked\n      self.setlock\n      yield\n      self.unlock\n   end\n\n   def unlock\n      test(?e, @lockfile) if\n         raise \"Unlock failed!\" if\n            ! system(\"rm -f #{@lockfile}\");\n\n      @locked_up = false\n   end\nend\n\n&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">I use it this way:</span></span></span>\n\nmylock = Lock.new\n\nmylock.locked {\n#  ....do stuff....\n   }\n\n&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt; <span style=\"color: #4B0082;\">or this way:</span></span></span>\n\nreturn if Lock.locked?(\"Oracle.lock\")\n\n&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;</span></span>\n\nWhat do you think?\n\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "DDouthitt@  n  c", "date": "2000-03-21 08:10:56 -0600", "reply-to": "", "id": "2053", "channel": "ruby-talk", "subject": "[ruby-talk:02053] Lockfiles"}
{"name": "\"David Douthitt\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2052", "text": "<pre>| <span style=\"color: #007700;\">In message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2034\">[ruby-talk:02034]</a> class File acting funny!\"</span>\n|     <span style=\"color: #007700;\">on 00/03/20, \"David Douthitt\" &lt;DDouthitt / cuna.com&gt; writes:</span>\n| \n| <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">Designing my own iterators isn't a problem, but this lock class seems</span></span>\n| <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">to be.  I get many funny errors:</span></span>\n| \n| <span style=\"color: #007700;\">|   <span style=\"color: #D2691E;\">* Lock.new insisted on 1 parameter - but initialize method</span></span>\n| <span style=\"color: #007700;\">|     <span style=\"color: #D2691E;\">had NO parameters</span></span>\n| \n| <span style=\"color: #007700;\">First of all, IO and its subclasses does not call `initialize' yet.</span>\n\nAha!\n\n| <span style=\"color: #007700;\">|   <span style=\"color: #D2691E;\">* $0 was not being recognized in parameter default value expressions</span></span>\n| \n| <span style=\"color: #007700;\">It works on my machine:</span>\n\nIs there a limit to the complexity of expressions used as default\nvalues?\n\n| <span style=\"color: #007700;\">|   <span style=\"color: #D2691E;\">* $stdio evaluates to nil</span></span>\n| \n| <span style=\"color: #007700;\">There's no $stdio predefined, but $stdin, $stdout, $stderr.</span>\n\nI KNEW there had to be a dumb mistake in there somewhere :-)\n\n| <span style=\"color: #007700;\">|   <span style=\"color: #D2691E;\">* flock appears to fail on non-existant files (?) and says in the</span></span>\n| <span style=\"color: #007700;\">|     <span style=\"color: #D2691E;\">documentation \"advisory\" lock.... </span></span>\n| \n| <span style=\"color: #007700;\">See `man 2 flock' if you're using UNIX box.  Advisory lock requires</span>\n| <span style=\"color: #007700;\">a file to be exist.</span>\n\nUgh.  I shifted gears and went to using (with ksh or posix)\nsystem(\"set -o noclobber ; cat /dev/null &gt; #{lockf} 2&gt; /dev/null\")\nand did NOT subclass IO.  Now it WORKS.\n\n| <span style=\"color: #007700;\">Two work arounds:</span>\n| \n|   <span style=\"color: #007700;\">(a) Wait until IO calls `initialize', somewhere in this month I</span>\n|       <span style=\"color: #007700;\">think.</span>\n| \n|   <span style=\"color: #007700;\">(b) Use delegator, e.g.</span>\n| \n|          <span style=\"color: #007700;\">require 'delegate</span>\n| \n|          <span style=\"color: #007700;\">class Lock&lt;DelegateClass(IO)</span>\n|             <span style=\"color: #007700;\">attr_accessor :locked, :lockdir, :lockfile</span>\n|             <span style=\"color: #007700;\">...</span>\n|          <span style=\"color: #007700;\">end</span>\n\nThese sound like 1.5-isms.  Am I the only one using 1.4.3?\n\nThanks for the help and info!\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "DDouthitt@  n  c", "date": "2000-03-21 07:49:23 -0600", "reply-to": "", "id": "2052", "channel": "ruby-talk", "subject": "[ruby-talk:02052] Re: class File acting funny!"}
{"name": "TAKAHASHI Masayoshi", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2051", "text": "<pre>Masaki Fukushima &lt;fukusima / goto.info.waseda.ac.jp&gt; wrote\u00a1\u00a7\n&gt; <span style=\"color: #007700;\">Hiroshi IGARASHI &lt;igarashi / ueda.info.waseda.ac.jp&gt; wrote:</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">Here is a half of my part.</span></span>\n&gt; <span style=\"color: #007700;\">&gt;     <span style=\"color: #D2691E;\"><a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html</a></span></span>\n&gt; <span style=\"color: #007700;\">&gt;     <span style=\"color: #D2691E;\"><a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html</a></span></span>\n&gt; \n&gt; <span style=\"color: #007700;\">And here is my part.</span>\n&gt; \n&gt;   <span style=\"color: #007700;\"><a href=\"http://www.goto.info.waseda.ac.jp/~fukusima/gtk/install.html\" target=\"_top\">http://www.goto.info.waseda.ac.jp/~fukusima/gtk/install.html</a></span>\n&gt;   <span style=\"color: #007700;\"><a href=\"http://www.goto.info.waseda.ac.jp/~fukusima/gtk/hello.html\" target=\"_top\">http://www.goto.info.waseda.ac.jp/~fukusima/gtk/hello.html</a></span>\n\nAnd my part.\n\n<a href=\"http://www.inac.co.jp/~maki/ruby/gtk/index.html\" target=\"_top\">http://www.inac.co.jp/~maki/ruby/gtk/index.html</a>\n\n<a href=\"http://www.inac.co.jp/~maki/ruby/gtk/links.html\" target=\"_top\">http://www.inac.co.jp/~maki/ruby/gtk/links.html</a>\n(add link to 'Glade/Ruby'.)\n\nTAKAHASHI Masayoshi (maki / inac.co.jp)\n<a name=\"tail\"></a></pre>", "references": ["2035"], "user": "maki@  a  c  j", "date": "2000-03-21 21:53:49 +0900", "reply-to": "Your message of \"Tue, 21 Mar 2000 02:24:07 +0900\"", "id": "2051", "channel": "ruby-talk", "subject": "[ruby-talk:02051] Re: English Ruby/Gtk Tutorial?"}
{"name": "B_DAVISON", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2050", "text": "<pre>Hi,\n\nRe: <span style=\"color: #007700;\"><a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2045\">[ruby-talk:02045]</a> Re: Anonymous and Singleton Classes</span>\n\n&gt;<span style=\"color: #007700;\">Hi,</span>\n&gt;\n&gt;<span style=\"color: #007700;\">In message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2036\">[ruby-talk:02036]</a> Anonymous and Singleton Classes\"</span>\n&gt;    <span style=\"color: #007700;\">on 00/03/20, B_DAVISON &lt;Bob.Davison / reuters.com&gt; writes:</span>\n&gt;\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">I am a Ruby newbie and having some problems getting my mind around certain</span></span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">aspects of classes, especially anonymous classes and singleton classes.</span></span>\n&gt;<span style=\"color: #007700;\">|</span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">I composed a nice long mail to you all then realised that I should check the</span></span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">mail archive first and found the February thread \"Singleton Classes\".  Now I</span></span>\n&gt;<span style=\"color: #007700;\">am</span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">even more confused!</span></span>\n&gt;<span style=\"color: #007700;\">|</span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">I had just decided that class &lt;&lt; obj; ...; end didn't actually create an</span></span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">anonymous class (even though FAQ 6.6 says it does) and then matz says that it</span></span>\n&gt;<span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">does.</span></span>\n&gt;\n&gt;<span style=\"color: #007700;\">Two points:</span>\n&gt;\n&gt;  <span style=\"color: #007700;\">(a) `Class::new' should call `inherited' because it creates new</span>\n&gt;      <span style=\"color: #007700;\">anonymous subclass.  It's a bug.</span>\n&gt;\n&gt;  <span style=\"color: #007700;\">(b) In current implementation singleton class statement creates</span>\n&gt;      <span style=\"color: #007700;\">internal class, but it is just a virtual class, so that</span>\n&gt;      <span style=\"color: #007700;\">`inherited' is not called for them.  I consder it a feature.</span>\n&gt;\n&gt;\t\t\t\t\t\t\t<span style=\"color: #007700;\">matz.</span>\n\nOK, so would I be right in saying that it's an implementation thing and you\nwant to keep that hidden so the implementation can change?  Perhaps using the\nterm 'class' in the description of these things is misleading (or might be in\nthe future if the implementation changes :-)\n\nIt a similar sort of thing going on with the class Class?  I was a bit confused\nby the description of Class in the Ruby Reference Manual where you start\ndescribing an unnamed meta-class that is actually the class of each class but\nthen say that it is complicated and stop.  Guessing from above is the class of\neach class a singleton class of Class?\n\nWould still be grateful for your help with the following though.\nWhen I was trying to find out about subclasses I tried defining Class.inherited\n rather than C1.inherited and got no output even when creating a named\nsubclass.  To my mind C1 was an instance of Class and inherited an instance\nmethod of Class therefore C1 should inherit Classes implementation of\ninherited.\n\ne.g.\n\ndef Class.inherited(subclass)\n  print \"&gt;&gt;&gt; inherited \", subclass, \"\\n\"\nend\n\nclass C1\nend\n\nclass C2 &lt; C1\nend\n\nand nothing is output.\n\nThanks,\nBob\n\n-----------------------------------------------------------------\n        Visit our Internet site at <a href=\"http://www.reuters.com\" target=\"_top\">http://www.reuters.com</a>\n\nAny views expressed in this message are those of  the  individual\nsender,  except  where  the sender specifically states them to be\nthe views of Reuters Ltd.\n<a name=\"tail\"></a></pre>", "references": [""], "user": "Bob.Davison@  u  r  c", "date": "2000-03-21 10:16:30 +0000", "reply-to": "2045", "id": "2050", "channel": "ruby-talk", "subject": "[ruby-talk:02050] Re: Anonymous and Singleton Classes"}
{"name": "Minero Aoki", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2049", "text": "<pre>Hi,\n\n  In mail \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2014\">[ruby-talk:02014]</a> Re: English Ruby/Gtk Tutorial?\"\n    SUGIHARA Hiroshi (SuHi or SugHimsi) &lt;manamist / white.diamond.ne.jp&gt; wrote:\n\n&gt; <span style=\"color: #007700;\">SugHimsi(%HeIsSaidJustToLoseHisPatienceOnThisSubject;-).</span>\n\n&gt; <span style=\"color: #007700;\">The entire documents (and their translators -- all non-native) are below:</span>\n&gt; <span style=\"color: #007700;\">(((pressure?! :-):-):-)</span>\n\n^^;;;\n\n&gt; <span style=\"color: #007700;\">* clist.html         (aamine)</span>\n&gt; <span style=\"color: #007700;\">* text.html          (aamine)</span>\n\nThen, here's my part.\n\nMinero Aoki\n<hr>\n#======================================================================\n/nextfile clist.html\n\n/chap CList widget\n\nGtk:<span style=\"color: #007700;\">:<span style=\"color: #D2691E;\">CList is a multi-column list widget. It will replace Gtk::List class</span></span>\n(of course, Gtk::List is still available).\n\n#----------------------------------------------------------------------\n/section ex: Display Environmental Variables\n\nHere is the simple example of CList class.\nThis program displayes all environmental variables.\n&lt;p&gt;\n\n/proginsert clist.rb\n\nResult&lt;br&gt;\n(attention: this result depends gtk-1.0.x. If you execute this program\n with version 1.2.x, little changes will be occur in look &amp; feel.)&lt;br&gt;\n<img src=\"imgs/clist.gif\">\n&lt;p&gt;\n\nDiscription&lt;br&gt;\n&lt;ul&gt;\n=c clist = Gtk::CList.new(['name', 'value'])\nThis creates a 2 columns CList widget object, which titles are\n'name' and 'value'.\n\n=c clist.set_usize(300, 200)\nThis set the widget 300 pixels width, 200 pixels height.\n\n=c clist.set_column_width 0, 100\nThis set the first column 100 pixels width.\nThe index of the first column is 0.\n\n=c ENV.keys.sort.each {|k| clist.append [k, ENV[k]]}\n\"ENV\" is built-in constant of Ruby. It is (pseudo) Hash which contains\nenvironment variable.\nThis adds the pair of one variable name and its value to list.\nThe length of array for \"append\" method must be equal to the number of\nCList columns.\n&lt;/ul&gt;\n\n#----------------------------------------------------------------------\n/section Methods of CList Widget\n\n&lt;dl&gt;\n=d &lt;code&gt;&lt;b&gt;Gtk::CList.new&lt;/b&gt;&lt;/code&gt;(&lt;i&gt;columns&lt;/i&gt;)\n=d &lt;code&gt;&lt;b&gt;Gtk::CList.new&lt;/b&gt;&lt;/code&gt;([&lt;i&gt;'title1', 'title2', ... &lt;/i&gt;])\n&lt;dd&gt;\nThis method creates a CList widget.\nWhen using first style, created CList have \"columns\" columns but no title.\nWhen using second style, created CList have columns with title.\n\n=d &lt;code&gt;&lt;b&gt;set_policy&lt;/b&gt;&lt;/code&gt;(&lt;i&gt;vscrollbar_policy&lt;/i&gt;, &lt;i&gt;hscrollbar_polic\ny&lt;/i&gt;)\n\n&lt;/dl&gt;\n\n#/write\n#======================================================================\n#=begin\n/nextfile text.html\n\n/chap Text Widget\n\n#----------------------------------------------------------------------\n/section Creating Text Widget\n\nGtk:<span style=\"color: #007700;\">:<span style=\"color: #D2691E;\">Text is the widget to edit multi-lines text.</span></span>\nGtk:<span style=\"color: #007700;\">:<span style=\"color: #D2691E;\">Text.new creates Text widget.</span></span>\n&lt;p&gt;\n\n/proginsert text.rb\n\nResult&lt;br&gt;\n<img src=\"imgs/text.gif\">\n&lt;p&gt;\n\nText widget doesn't receive user's input as default.\nIt is done by using \"set_editable\" method.\n\n&lt;pre&gt;\ntext = Gtk::Text.new\ntext.set_editable true\n&lt;/pre&gt;\n\n#----------------------------------------------------------------------\n/section Using Scrollbar with Text Widget\n\nGtk:<span style=\"color: #007700;\">:<span style=\"color: #D2691E;\">Adjustment class represents abstruct data structure to fetch</span></span>\na part of fuge data (Gtk::Adjustment is NOT a widget).\n&lt;p&gt;\nUsing the Gtk::Adjustment enable to scroll text in Text widget.\n&lt;p&gt;\nHere's a sample of Text widget with a scroll bar.\n&lt;p&gt;\n\n/proginsert text3.rb\n\nResult&lt;br&gt;\n<img src=\"imgs/text-scroll.gif\">\n&lt;p&gt;\n\nDiscription&lt;br&gt;\n&lt;ul&gt;\n=c vadj = Gtk::Adjustment.new(0,0,0,0,0,0)\nThis creates Adjustment object.\nBoth Text widget and Scrollbar widget owns this object.\n\n=c text = Gtk::Text.new(nil, vadj)\nThis creates Text widget.\nFirst argument is the Adjustment for horizontal direction, and\nsecond is also the Adjustmen for vertical direction.\nArgument \"nil\" means using default adjustments.\n(attention: Text widget does not support horizontal Adjustment yet)\n\n=c vs = Gtk::VScrollbar.new(vadj)\nThis creates scrollbar. VScrollbar is vertical scrollbar,\nHScrollbar is horizontal one.\nArgument \"vadj\" is the Adjustment object which is same one for Text widget.\n\n=c hbox = Gtk::HBox.new(false, 0)\n=c hbox.pack_start text, true, true, 0\n=c hbox.pack_start vs, false, false, 0\nThis creates horizontal box and pack Text and Scrollbar.\n&lt;/ul&gt;\n\n#----------------------------------------------------------------------\n/section Methods of Text widget\n\nHere's main methods of Text widget.\n\n&lt;dl&gt;\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;set_point&lt;/b&gt;(&lt;i&gt;index&lt;/i&gt;)&lt;/code&gt;\n&lt;dd&gt;\nThis method set the \"inserting point\".\n&lt;i&gt;index&lt;/i&gt; is the index of the string in Text widget.\n\n=d &lt;code&gt;&lt;i&gt;index&lt;/i&gt; = &lt;i&gt;text&lt;/i&gt;.&lt;b&gt;get_point&lt;/b&gt;&lt;/code&gt;\n&lt;dd&gt;\nThis method returns the current \"inserting point\".\n\n=d &lt;code&gt;&lt;i&gt;length&lt;/i&gt; = &lt;i&gt;text&lt;/i&gt;.&lt;b&gt;get_length&lt;/b&gt;&lt;/code&gt;\n&lt;dd&gt;\nThis method returns the length of the string in Text widget.\nIt also includes the length of carrige return or line feed.\n\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;insert_text&lt;/b&gt;(&lt;i&gt;chars&lt;/i&gt;, &lt;i&gt;index&lt;/i&gt;)&lt;/code&gt;\n&lt;dd&gt;\nThis method insert string to Text widget.\nIt is inherited from Gtk::Editable.\nThis insert the string &lt;i&gt;chars&lt;/i&gt; into the &lt;i&gt;index&lt;/i&gt;.\n\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;get_chars&lt;/b&gt;(&lt;i&gt;start_pos&lt;/i&gt;, &lt;i&gt;end_pos&lt;/i&gt;)&lt;/code&gt;\n&lt;dd&gt;\nThis method returns the string from &lt;i&gt;start_pos&lt;/i&gt; to &lt;i&gt;end_pos&lt;/i&gt;.\nGtk:<span style=\"color: #007700;\">:<span style=\"color: #D2691E;\">Text.get_chars is inherited from Gtk::Editable.</span></span>\n\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;insert&lt;/b&gt;(&lt;i&gt;font&lt;/i&gt;, &lt;i&gt;fore&lt;/i&gt;, &lt;i&gt;back&lt;/i&gt;, &lt;i&gt;ch\nars&lt;/i&gt;)&lt;/code&gt;\n&lt;dd&gt;\nThis method inserts string into current \"inserting point\".\nFont, foreground color, Background color, can be designated.\n&lt;i&gt;font&lt;/i&gt; is Gdk::Font\u00a1\u00a2&lt;i&gt;fore&lt;/i&gt; and &lt;i&gt;back&lt;/i&gt; is Gdk::Color object.\nArgument \"nil\" for font/color means using default value (one of widget style).\n\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;backward_delete&lt;/b&gt;(&lt;i&gt;nchars&lt;/i&gt;)&lt;/code&gt;\n=d &lt;i&gt;text&lt;/i&gt;.&lt;code&gt;&lt;b&gt;forward_delete&lt;/b&gt;(&lt;i&gt;nchars&lt;/i&gt;)&lt;/code&gt;\n&lt;dd&gt;\nThese methods delete &lt;i&gt;nchars&lt;/i&gt; characters from current \"inserting point\".\n\"backward_delete\" delete string from right to left.\n\"forward_delete\" delete string from left to right.\n\n&lt;/dl&gt;\n\n#/write\n<a name=\"tail\"></a></pre>", "references": ["2014"], "user": "aamine@  .  n  s  f  e  p", "date": "2000-03-21 18:22:32 +0900", "reply-to": "2014", "id": "2049", "channel": "ruby-talk", "subject": "[ruby-talk:02049] Re: English Ruby/Gtk Tutorial?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2048", "text": "<pre>From: <span style=\"color: #007700;\">Masaki Fukushima &lt;fukusima / goto.info.waseda.ac.jp&gt;</span>\n&gt; <span style=\"color: #007700;\">Hiroshi IGARASHI &lt;igarashi / ueda.info.waseda.ac.jp&gt; wrote:</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">Here is a half of my part.</span></span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n<a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html</a>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n<a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html</a>\n&gt;\n&gt; <span style=\"color: #007700;\">And here is my part.</span>\n&gt;\n&gt;   <span style=\"color: #007700;\"><a href=\"http://www.goto.info.waseda.ac.jp/~fukusima/gtk/install.html\" target=\"_top\">http://www.goto.info.waseda.ac.jp/~fukusima/gtk/install.html</a></span>\n&gt;   <span style=\"color: #007700;\"><a href=\"http://www.goto.info.waseda.ac.jp/~fukusima/gtk/hello.html\" target=\"_top\">http://www.goto.info.waseda.ac.jp/~fukusima/gtk/hello.html</a></span>\n\nThanks,\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["1989", "1992", "2029", "2035"], "user": "schneiker@  m  n", "date": "2000-03-21 02:50:54 -0600", "reply-to": "", "id": "2048", "channel": "ruby-talk", "subject": "[ruby-talk:02048] Re: English Ruby/Gtk Tutorial?"}
{"name": "\"Conrad Schneiker\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2047", "text": "<pre>From: <span style=\"color: #007700;\">Hiroshi IGARASHI &lt;igarashi / ueda.info.waseda.ac.jp&gt;</span>\n\n&gt; <span style=\"color: #007700;\">Hiroshi IGARASHI &lt;igarashi / ueda.info.waseda.ac.jp&gt; wrote:</span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">The original author/maintainer of the tutorial seems to busy.</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">I will call translators for the rest of chapters again instead of him.</span></span>\n&gt;\n&gt; <span style=\"color: #007700;\">Here is a half of my part.</span>\n&gt;\n<a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/packing.html</a>\n&gt;\n<a href=\"http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html\" target=\"_top\">http://www.ueda.info.waseda.ac.jp/~igarashi/rbgtk-tutorial/widgets.html</a>\n&gt;\n&gt; <span style=\"color: #007700;\">Please debug my broken English :-)</span>\n&gt;\n&gt;\n&gt; <span style=\"color: #007700;\"># I'm in a business trip.</span>\n&gt; <span style=\"color: #007700;\"># I'll translate the rest after coming back.</span>\n\nThanks,\nConrad\n\n<a name=\"tail\"></a></pre>", "references": ["1989", "1992", "2029"], "user": "schneiker@  m  n", "date": "2000-03-21 02:49:38 -0600", "reply-to": "", "id": "2047", "channel": "ruby-talk", "subject": "[ruby-talk:02047] Re: English Ruby/Gtk Tutorial?"}
{"name": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2046", "text": "<pre>Hi,\n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2043\">[ruby-talk:02043]</a> Re: rb_global_entry\"\n    on 00/03/21, ts &lt;decoux / moulon.inra.fr&gt; writes:\n\n| <span style=\"color: #007700;\">I've a similar problem with symbols. One of my modules define</span>\n| <span style=\"color: #007700;\">\"method_missing\" and actually I write :</span>\n|\n|<span style=\"color: #007700;\">#if RUBY_VERSION_CODE &lt; 153</span>\n|    <span style=\"color: #007700;\">id = FIX2INT(argv[0]);</span>\n|<span style=\"color: #007700;\">#else</span>\n|    <span style=\"color: #007700;\">id = SYM2ID(argv[0]);</span>\n|<span style=\"color: #007700;\">#endif</span>\n|\n| <span style=\"color: #007700;\">Do it exist another way to write it ?</span>\n\nOK, I'll add SYM2ID to 1.4.4.\n<a name=\"tail\"></a></pre>", "references": ["2022", "2030", "2043"], "user": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "date": "2000-03-21 15:49:25 +0900", "reply-to": "2043", "id": "2046", "channel": "ruby-talk", "subject": "[ruby-talk:02046] Re: rb_global_entry"}
{"name": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2098", "text": "<pre>Hi,\n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2091\">[ruby-talk:02091]</a> Array Gotchas\"\n    on 00/03/22, \"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; writes:\n\n|<span style=\"color: #007700;\">By chance, I also discovered a bug in the manual where it claims the </span>\n|<span style=\"color: #007700;\">following are the same:</span>\n|\n|<span style=\"color: #007700;\">each_index {...}</span>\n|<span style=\"color: #007700;\">(0..ary.size).each {...}</span>\n|\n|<span style=\"color: #007700;\">But they aren't. Do you see why?</span>\n\nBesides return values, `..' operator creates a range covers including\nright side value.  It should be `...' operator.\n\nHmm, in Japanese version, it was `(0..(ary.size-1)).each {...}'.\n\n\t\t\t\t\t\t\tmatz.\n<a name=\"tail\"></a></pre>", "references": ["2091"], "user": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "date": "2000-03-23 12:31:03 +0900", "reply-to": "2091", "id": "2098", "channel": "ruby-talk", "subject": "[ruby-talk:02098] Re: Array Gotchas"}
{"name": "OZAWA Sakuro", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2097", "text": "<pre>In article &lt;200003230244.LAA07577 / hanare00.math.sci.hokudai.ac.jp&gt;,\n    GOTO Kentaro writes:\n\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">Ruby&gt; <span style=\"color: #4B0082;\">ary = [1, 2, 3, 4, 5]</span></span></span>\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">Ruby&gt; <span style=\"color: #4B0082;\">ary.each_index {|i| print i, \"\\n\"}</span></span></span>\n\n&gt; <span style=\"color: #007700;\">Generally speaking, A statement returns a value in Ruby. </span>\n&gt; <span style=\"color: #007700;\">Each last output line is the value of the statement, i.e.,</span>\n\nIn addition, bcause array indice have range from 0 to size-1,\n\nary.each_index {|i| print i, \"\\n\"}\n\nwill print values from 0 to (ary.size - 1).\n                            ^^^^^^^^^^^^^^\nWhile\n\n(0..ary.size).each {|i| print i, \"\\n\"}\n\nwill print values from 0 to ary.size.\n\n-- \nOZAWA -Crouton- Sakuro\n&lt;<a href=\"mailto:crouton\" target=\"_top\">mailto:crouton</a> / duelists.org&gt; &lt;<a href=\"http://www.duelists.org/~crouton/\" target=\"_top\">http://www.duelists.org/~crouton/</a>&gt;\nPGP Fingerprint: C98F 74E0 AEEB 4578 1DFC  F650 3BE0 9627 11FC C9F5\n<a name=\"tail\"></a></pre>", "references": ["2093", "2096"], "user": "crouton@  e  s  .  g", "date": "2000-03-23 12:25:33 +0900", "reply-to": "2096", "id": "2097", "channel": "ruby-talk", "subject": "[ruby-talk:02097] Re: Array Gotchas"}
{"name": "gotoken@  t  s  .  k  a  a  j  (  T  K  t  o", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2096", "text": "<pre>In message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2093\">[ruby-talk:02093]</a> Re: Array Gotchas\"\n    on 00/03/22, \"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; writes:\n&gt;<span style=\"color: #007700;\">Following was my exercise:</span>\n&gt;\n&gt;<span style=\"color: #007700;\">Ruby&gt; <span style=\"color: #D2691E;\">ary = [1, 2, 3, 4, 5]</span></span>\n&gt;<span style=\"color: #007700;\">Ruby&gt; <span style=\"color: #D2691E;\">ary.each_index {|i| print i, \"\\n\"}</span></span>\n&gt;<span style=\"color: #007700;\">0</span>\n&gt;<span style=\"color: #007700;\">1</span>\n&gt;<span style=\"color: #007700;\">2</span>\n&gt;<span style=\"color: #007700;\">3</span>\n&gt;<span style=\"color: #007700;\">4</span>\n&gt;<span style=\"color: #007700;\">[1, 2, 3, 4, 5]</span>\n&gt;<span style=\"color: #007700;\">Ruby&gt; <span style=\"color: #D2691E;\">(0..ary.size).each {|i| print i, \"\\n\"}</span></span>\n&gt;<span style=\"color: #007700;\">0</span>\n&gt;<span style=\"color: #007700;\">1</span>\n&gt;<span style=\"color: #007700;\">2</span>\n&gt;<span style=\"color: #007700;\">3</span>\n&gt;<span style=\"color: #007700;\">4</span>\n&gt;<span style=\"color: #007700;\">5</span>\n&gt;<span style=\"color: #007700;\">0..5</span>\n\nI'm guessing you used eval.rb.  This difference is not in Ruby but in\neval.rb; eval.rb reports the value of each statement.\n\nGenerally speaking, A statement returns a value in Ruby. \nEach last output line is the value of the statement, i.e.,\n\n[1, 2, 3, 4, 5] \n   is the value of `ary.each_index {|i| print i, \"\\n\"}'\n0..5\n   is the value of `(0..ary.size).each {|i| print i, \"\\n\"}'\n\n-- gotoken\nPS. Should I use irb instead of eval.rb in User's guide?\n<a name=\"tail\"></a></pre>", "references": ["2093"], "user": "gotoken@  t  s  .  k  a  a  j  (  T  K  t  o", "date": "2000-03-23 11:44:34 +0900", "reply-to": "2093", "id": "2096", "channel": "ruby-talk", "subject": "[ruby-talk:02096] Re: Array Gotchas"}
{"name": "ARIMA Yasuhiro", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2095", "text": "<pre>Hi,\n\n\"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; wrote\n\n| <span style=\"color: #007700;\">each_index {...}</span>\n| <span style=\"color: #007700;\">(0..ary.size).each {...}</span>\n\nThe \"Range\" object samples.\n\nary = [\"a\", \"b\", \"c\"]\nary.each {|e| print e, \"\\n\"}\nputs \"\"\nary.each_index {|i| print i, \"\\n\"}\nputs \"\"\n(0...ary.size).each {|i| print i, \"\\n\"}\nputs \"\"\n(0..ary.size).each {|i| print i, \"\\n\"}\nputs \"\"\n\n--\n  ARIMA Yasuhiro &lt;fit0298 / fitec.co.jp&gt;\n<a name=\"tail\"></a></pre>", "references": ["2091"], "user": "fit0298@  t  .  .", "date": "2000-03-23 11:36:22 +0900", "reply-to": "2091", "id": "2095", "channel": "ruby-talk", "subject": "[ruby-talk:02095] Re: Array Gotchas"}
{"name": "gotoken@  t  s  .  k  a  a  j  (  T  K  t  o", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2094", "text": "<pre>Hi, \n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2091\">[ruby-talk:02091]</a> Array Gotchas\"\n    on 00/03/22, \"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; writes:\n&gt;<span style=\"color: #007700;\">While I was wondering why '+' was the concatenation and '-' was the </span>\n&gt;<span style=\"color: #007700;\">subtraction, I learned that Array indeed has the concat(other) method, but </span>\n&gt;<span style=\"color: #007700;\">not the substract(other) method and many other explicite spelling ones.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">There is already '+' for concatenation, why concat(other). When </span>\n&gt;<span style=\"color: #007700;\">concat(other) why not substract(other) also. And what about union(other), </span>\n&gt;<span style=\"color: #007700;\">etc.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">This is a sort of incompleteness and redundancy.</span>\n\nAt first, `+' and `concat' is slightly different. \n\n  a, b = [1, 2, 3], [4, 5, 6]\n\n  a + b;       p a #=&gt; [1, 2, 3]\n  a.concat b;  p a #=&gt; [1, 2, 3, 4, 5, 6]\n  \nSecond, `substract' does indeed not exist.  If you would strongly like\nto add the method as built-in one, we would start discussion.  Or, you\ncan define as follows:\n\n  class Array\n    def substract(other)\n      replace(self - other)\n    end\n  end\n\n  a, b = [1, 2, 3, 4, 5, 6], [1, 3, 5]\n  a - b;         p a #=&gt; [1, 2, 3, 4, 5, 6]\n  a.substract b; p a #=&gt; [2, 4, 6]\n\nRegards,\n\n-- gotoken\n<a name=\"tail\"></a></pre>", "references": ["2091"], "user": "gotoken@  t  s  .  k  a  a  j  (  T  K  t  o", "date": "2000-03-23 11:34:42 +0900", "reply-to": "2091", "id": "2094", "channel": "ruby-talk", "subject": "[ruby-talk:02094] Re: Array Gotchas"}
{"name": "\"Dat Nguyen\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2093", "text": "<pre>Following was my exercise:\n\nRuby&gt; <span style=\"color: #007700;\">ary = [1, 2, 3, 4, 5]</span>\nRuby&gt; <span style=\"color: #007700;\">ary.each_index {|i| print i, \"\\n\"}</span>\n0\n1\n2\n3\n4\n[1, 2, 3, 4, 5]\nRuby&gt; <span style=\"color: #007700;\">(0..ary.size).each {|i| print i, \"\\n\"}</span>\n0\n1\n2\n3\n4\n5\n0..5\n\nDat\n\n&gt;<span style=\"color: #007700;\">From: <span style=\"color: #D2691E;\">Dave Thomas &lt;Dave / thomases.com&gt;</span></span>\n&gt;<span style=\"color: #007700;\">Reply-To: ruby-talk / netlab.co.jp</span>\n&gt;<span style=\"color: #007700;\">To: <span style=\"color: #D2691E;\">ruby-talk / netlab.co.jp (ruby-talk ML)</span></span>\n&gt;<span style=\"color: #007700;\">Subject: <span style=\"color: #D2691E;\"><a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2092\">[ruby-talk:02092]</a> Re: Array Gotchas</span></span>\n&gt;<span style=\"color: #007700;\">Date: <span style=\"color: #D2691E;\">22 Mar 2000 20:06:26 -0600</span></span>\n&gt;\n&gt;<span style=\"color: #007700;\">\"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; writes:</span>\n&gt;\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">By chance, I also discovered a bug in the manual where it claims the</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">following are the same:</span></span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">each_index {...}</span></span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">(0..ary.size).each {...}</span></span>\n&gt; <span style=\"color: #007700;\">&gt;</span>\n&gt; <span style=\"color: #007700;\">&gt; <span style=\"color: #D2691E;\">But they aren't. Do you see why?</span></span>\n&gt;\n&gt;<span style=\"color: #007700;\">I'll bite. In what way are they different?</span>\n&gt;\n&gt;\n&gt;<span style=\"color: #007700;\">Dave</span>\n\n______________________________________________________\nGet Your Private, Free Email at <a href=\"http://www.hotmail.com\" target=\"_top\">http://www.hotmail.com</a>\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "thucdat@  t  i  c", "date": "2000-03-22 21:20:10 ", "reply-to": "", "id": "2093", "channel": "ruby-talk", "subject": "[ruby-talk:02093] Re: Array Gotchas"}
{"name": "Dave Thomas", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2092", "text": "<pre>\"Dat Nguyen\" &lt;thucdat / hotmail.com&gt; writes:\n\n&gt; <span style=\"color: #007700;\">By chance, I also discovered a bug in the manual where it claims the </span>\n&gt; <span style=\"color: #007700;\">following are the same:</span>\n&gt; \n&gt; <span style=\"color: #007700;\">each_index {...}</span>\n&gt; <span style=\"color: #007700;\">(0..ary.size).each {...}</span>\n&gt; \n&gt; <span style=\"color: #007700;\">But they aren't. Do you see why?</span>\n\nI'll bite. In what way are they different?\n\n\nDave\n<a name=\"tail\"></a></pre>", "references": ["2091"], "user": "Dave@  o  s  .  m", "date": "2000-03-22 20:06:26 -0600", "reply-to": "\"Dat Nguyen\"'s message of \"Wed, 22 Mar 2000 20:59:43 EST\"", "id": "2092", "channel": "ruby-talk", "subject": "[ruby-talk:02092] Re: Array Gotchas"}
{"name": "\"Dat Nguyen\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2091", "text": "<pre>While I was wondering why '+' was the concatenation and '-' was the \nsubtraction, I learned that Array indeed has the concat(other) method, but \nnot the substract(other) method and many other explicite spelling ones.\n\nThere is already '+' for concatenation, why concat(other). When \nconcat(other) why not substract(other) also. And what about union(other), \netc.\n\nThis is a sort of incompleteness and redundancy.\n\nBy chance, I also discovered a bug in the manual where it claims the \nfollowing are the same:\n\neach_index {...}\n(0..ary.size).each {...}\n\nBut they aren't. Do you see why?\n\nDat\n\n______________________________________________________\nGet Your Private, Free Email at <a href=\"http://www.hotmail.com\" target=\"_top\">http://www.hotmail.com</a>\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "thucdat@  t  i  c", "date": "2000-03-22 20:59:43 ", "reply-to": "", "id": "2091", "channel": "ruby-talk", "subject": "[ruby-talk:02091] Array Gotchas"}
{"name": "Clemens Hintze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2136", "text": "<pre>ts writes:\n&gt; <span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt;<span style=\"color: #F000F0;\">&gt;&gt; \"C\" == Clemens Hintze &lt;c.hintze / gmx.net&gt; writes:</span></span></span></span>\n&gt; \n&gt; <span style=\"color: #007700;\">C&gt; <span style=\"color: #D2691E;\">I would mean the \".\" should be the *first* entry within the load</span></span>\n&gt; <span style=\"color: #007700;\">C&gt; <span style=\"color: #D2691E;\">path. My local libs should overwrite site and system ones! If not, I</span></span>\n&gt; <span style=\"color: #007700;\">C&gt; <span style=\"color: #D2691E;\">could not e.g. copy a system lib and patch it.</span></span>\n&gt; \n&gt;  <span style=\"color: #007700;\">I don't think this is a good idea for security reason. ruby don't add \".\"</span>\n\n...\n\n&gt;  <span style=\"color: #007700;\">If \".\" is the first entry, a script can load any standard module in place</span>\n&gt;  <span style=\"color: #007700;\">of the  real module, no ?</span>\n\nYeah, yeah! I am already blamed! I admit I have not thought about\nsecurity. Shame, shame, shame ... shot myself into the foot :-(\n\n&gt; <span style=\"color: #007700;\">Guy Decoux</span>\n\n\\cle\n\n-- \nClemens Hintze  mailto: c.hintze / gmx.net\n<a name=\"tail\"></a></pre>", "references": ["2131"], "user": "c.hintze@  x  e", "date": "2000-03-24 16:29:40 +0100", "reply-to": "2131", "id": "2136", "channel": "ruby-talk", "subject": "[ruby-talk:02136] Re: Question the sequence in $:"}
{"name": "Clemens Hintze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2135", "text": "<pre>Yukihiro Matsumoto writes:\n&gt; <span style=\"color: #007700;\">Hi,</span>\n&gt; \n&gt; <span style=\"color: #007700;\">In message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2129\">[ruby-talk:02129]</a> Question the sequence in $:\"</span>\n&gt;     <span style=\"color: #007700;\">on 00/03/24, Clemens Hintze &lt;c.hintze / gmx.net&gt; writes:</span>\n\n...\n\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">I think everywhere the sequence should be: </span></span>\n&gt; <span style=\"color: #007700;\">|</span>\n&gt; <span style=\"color: #007700;\">|   <span style=\"color: #D2691E;\">local -&gt; site -&gt; system</span></span>\n&gt; <span style=\"color: #007700;\">|</span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">Other opinions?</span></span>\n&gt; \n&gt; <span style=\"color: #007700;\">I think relative path is too dangerous.  BTW, the sequence in the</span>\n&gt; <span style=\"color: #007700;\">Perl's load path is reversed somehow.</span>\n\nDamned! I have written to quickly, indeed. I have not thought about\nsecurity at all! *Blush* Once again a situation arose that let me dig\na hole and jump into it...\n\n&gt; \n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">And while thinking about this, I have another proposal. How about to</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">include the directory from where the program was started into the load</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">path too? That would enable me to put my application with its support</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">libs into an own subdirectory and after starting, the load path would</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">already contain this directory too! So its support libs could easily</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">be required too. But this should only happen, of course, if $0 is not</span></span>\n&gt; <span style=\"color: #007700;\">|<span style=\"color: #D2691E;\">'-' or '-e'.</span></span>\n&gt; \n&gt; <span style=\"color: #007700;\">I can understand you.  But `$0' path is not portable.</span>\n\n&lt;put the head out from the hole&gt; Does that mean you like the idea, but\nthere are problems with recognizing the correct '$0' value? \n&lt;vanish again like a flash&gt;\n\n&gt; \t\t\t\t\t\t\t<span style=\"color: #007700;\">matz.</span>\n\n\\cle\n\n-- \nClemens Hintze  mailto: c.hintze / gmx.net\n<a name=\"tail\"></a></pre>", "references": ["2129", "2133"], "user": "c.hintze@  x  e", "date": "2000-03-24 16:27:21 +0100", "reply-to": "2133", "id": "2135", "channel": "ruby-talk", "subject": "[ruby-talk:02135] Re: Question the sequence in $:"}
{"name": "Clemens Hintze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2134", "text": "<pre>Dat Nguyen writes:\n&gt; <span style=\"color: #007700;\">It's the order your PATH is arranged. Rearrange your PATH, you get a new </span>\n\nSorry, but I do not understand! What has my PATH to do with the\ncontents of '$:'? In my environment the contents of PATH is totally\ndifferent from that of '$:'!\n\n&gt; <span style=\"color: #007700;\">result according to the new arrangement.</span>\n\nOf course, I know. But ... what?\n\n&gt; <span style=\"color: #007700;\">The 'each' iterator picks up the items in '$:' according to their position </span>\n&gt; <span style=\"color: #007700;\">in '$:'.</span>\n\nI have not used the code in my mail to ask, what happens. I want to\nshow that the '.' directory is the last entry of '$:'. I consider this \nas wrong. I mean '.' should be the first element of '$:'!\n\nAnd I would not like to rearrange '$:' manually. It should be per\ndefault the way I propose, IMHO. :-)\n\nSorry for causing confusion with my bad english. Perhaps there will be \na time in future that I will be able to properly communicate in\nenglish. Till this time please be patient with me ... :-)\n\n&gt; \n&gt; <span style=\"color: #007700;\">Dat</span>\n\n \\cle\n\n...\n\n-- \nClemens Hintze  mailto: c.hintze / gmx.net\n<a name=\"tail\"></a></pre>", "references": ["2130"], "user": "c.hintze@  x  e", "date": "2000-03-24 16:07:18 +0100", "reply-to": "2130", "id": "2134", "channel": "ruby-talk", "subject": "[ruby-talk:02134] Re: Question the sequence in $:"}
{"name": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2133", "text": "<pre>Hi,\n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2129\">[ruby-talk:02129]</a> Question the sequence in $:\"\n    on 00/03/24, Clemens Hintze &lt;c.hintze / gmx.net&gt; writes:\n\n|<span style=\"color: #007700;\">As you can see the local directory \".\" is at the end of the load</span>\n|<span style=\"color: #007700;\">path. That means, that my current directory is the last one to be</span>\n|<span style=\"color: #007700;\">searched for libs.</span>\n|\n|<span style=\"color: #007700;\">Is this intended?</span>\n\nYes, It's intended.  Mostly because security reason.  If you want to\nload your own file, I think you should express it explicitly.\n\nBut you can use RUBYOPT environment variable for your purpose.\n\n  export RUBYOPT\n  RUBYOPT='I.\"\n  ruby -e 'p $LOAD_PATH'\n  [\".\", \"/usr/lib/ruby/site_ruby/1.5/i586-linux\", \"/usr/lib/ruby/site_ruby/1.5\", \"/usr/lib/ruby/site_ruby\", \"/usr/lib/ruby/1.5/i586-linux\", \"/usr/lib/ruby/1.5\", \".\"]\n\n|<span style=\"color: #007700;\">I think everywhere the sequence should be: </span>\n|\n|   <span style=\"color: #007700;\">local -&gt; site -&gt; system</span>\n|\n|<span style=\"color: #007700;\">Other opinions?</span>\n\nI think relative path is too dangerous.  BTW, the sequence in the\nPerl's load path is reversed somehow.\n\n|<span style=\"color: #007700;\">And while thinking about this, I have another proposal. How about to</span>\n|<span style=\"color: #007700;\">include the directory from where the program was started into the load</span>\n|<span style=\"color: #007700;\">path too? That would enable me to put my application with its support</span>\n|<span style=\"color: #007700;\">libs into an own subdirectory and after starting, the load path would</span>\n|<span style=\"color: #007700;\">already contain this directory too! So its support libs could easily</span>\n|<span style=\"color: #007700;\">be required too. But this should only happen, of course, if $0 is not</span>\n|<span style=\"color: #007700;\">'-' or '-e'.</span>\n\nI can understand you.  But `$0' path is not portable.\n\n\t\t\t\t\t\t\tmatz.\n<a name=\"tail\"></a></pre>", "references": ["2129"], "user": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "date": "2000-03-24 23:58:58 +0900", "reply-to": "2129", "id": "2133", "channel": "ruby-talk", "subject": "[ruby-talk:02133] Re: Question the sequence in $:"}
{"name": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2132", "text": "<pre>Hi,\n\nIn message \"<a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2128\">[ruby-talk:02128]</a> Re: New filelock-0.2.tar.gz in in.coming (II)\"\n    on 00/03/24, Clemens Hintze &lt;c.hintze / gmx.net&gt; writes:\n\n|<span style=\"color: #007700;\">Thank you very much. BTW: normally how often will you regulary check</span>\n|<span style=\"color: #007700;\">in.coming? Or will you be informed automatically after arrival? Or is</span>\n|<span style=\"color: #007700;\">informing you by email the preferred way?</span>\n\nUsually I do not check in.coming directory unless informed by email.\nLet me know if you put something in in.coming.\n\n\t\t\t\t\t\t\tmatz.\n<a name=\"tail\"></a></pre>", "references": ["*", "*", "2128"], "user": "matz@  t  b  o  p  Y  i  r  M  s  o  )", "date": "2000-03-24 23:49:11 +0900", "reply-to": "2128", "id": "2132", "channel": "ruby-talk", "subject": "[ruby-talk:02132] Re: New filelock-0.2.tar.gz in in.coming (II)"}
{"name": "ts", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2131", "text": "<pre>&gt;<span style=\"color: #007700;\">&gt;<span style=\"color: #D2691E;\">&gt;<span style=\"color: #4B0082;\">&gt;<span style=\"color: #F000F0;\">&gt; \"C\" == Clemens Hintze &lt;c.hintze / gmx.net&gt; writes:</span></span></span></span>\n\nC&gt; <span style=\"color: #007700;\">I would mean the \".\" should be the *first* entry within the load</span>\nC&gt; <span style=\"color: #007700;\">path. My local libs should overwrite site and system ones! If not, I</span>\nC&gt; <span style=\"color: #007700;\">could not e.g. copy a system lib and patch it.</span>\n\n I don't think this is a good idea for security reason. ruby don't add \".\"\n in rb_load_path only when ruby_init() is called with $SAFE &gt; 0. This mean,\n if I've well understood the source, that only a extension can prohibit the\n inclusion of \".\" in $LOAD_PATH.\n\n Someone can confirm, or infirm, this ?\n\n If \".\" is the first entry, a script can load any standard module in place\n of the  real module, no ?\n\n\nGuy Decoux\n\n\n\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "decoux@  u  n  n  .", "date": "2000-03-24 16:02:18 +0100", "reply-to": "message from Clemens Hintze on Fri, 24 Mar 2000 15:14:44 +0100 (CET)", "id": "2131", "channel": "ruby-talk", "subject": "[ruby-talk:02131] Re: Question the sequence in $:"}
{"name": "\"Dat Nguyen\"", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2130", "text": "<pre>It's the order your PATH is arranged. Rearrange your PATH, you get a new \nresult according to the new arrangement.\nThe 'each' iterator picks up the items in '$:' according to their position \nin '$:'.\n\nDat\n\n&gt;<span style=\"color: #007700;\">From: <span style=\"color: #D2691E;\">Clemens Hintze &lt;c.hintze / gmx.net&gt;</span></span>\n&gt;<span style=\"color: #007700;\">Reply-To: ruby-talk / netlab.co.jp</span>\n&gt;<span style=\"color: #007700;\">To: <span style=\"color: #D2691E;\">ruby-talk / netlab.co.jp (ruby-talk ML)</span></span>\n&gt;<span style=\"color: #007700;\">Subject: <span style=\"color: #D2691E;\"><a href=\"/cgi-bin/scat.rb/ruby/ruby-talk/2129\">[ruby-talk:02129]</a> Question the sequence in $:</span></span>\n&gt;<span style=\"color: #007700;\">Date: <span style=\"color: #D2691E;\">Fri, 24 Mar 2000 15:14:44 +0100 (CET)</span></span>\n&gt;\n&gt;<span style=\"color: #007700;\">Hi,</span>\n&gt;\n&gt;<span style=\"color: #007700;\">I have found the following:</span>\n&gt;\n&gt;<span style=\"color: #007700;\">$ ruby -v</span>\n&gt;<span style=\"color: #007700;\">ruby 1.5.3 (2000-03-15) [i586-linux]</span>\n&gt;\n&gt;<span style=\"color: #007700;\">$ ruby -e '$:.each{|p| p p}'</span>\n&gt;<span style=\"color: #007700;\">\"/usr/local/lib/ruby/site_ruby/1.5/i586-linux\"</span>\n&gt;<span style=\"color: #007700;\">\"/usr/local/lib/ruby/site_ruby/1.5\"</span>\n&gt;<span style=\"color: #007700;\">\"/usr/local/lib/ruby/site_ruby\"</span>\n&gt;<span style=\"color: #007700;\">\"/usr/local/lib/ruby/1.5/i586-linux\"</span>\n&gt;<span style=\"color: #007700;\">\"/usr/local/lib/ruby/1.5\"</span>\n&gt;<span style=\"color: #007700;\">\".\"</span>\n&gt;\n&gt;<span style=\"color: #007700;\">As you can see the local directory \".\" is at the end of the load</span>\n&gt;<span style=\"color: #007700;\">path. That means, that my current directory is the last one to be</span>\n&gt;<span style=\"color: #007700;\">searched for libs.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">Is this intended?</span>\n&gt;\n&gt;<span style=\"color: #007700;\">I would mean the \".\" should be the *first* entry within the load</span>\n&gt;<span style=\"color: #007700;\">path. My local libs should overwrite site and system ones! If not, I</span>\n&gt;<span style=\"color: #007700;\">could not e.g. copy a system lib and patch it.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">I think everywhere the sequence should be:</span>\n&gt;\n&gt;    <span style=\"color: #007700;\">local -&gt; site -&gt; system</span>\n&gt;\n&gt;<span style=\"color: #007700;\">Other opinions?</span>\n&gt;\n&gt;<span style=\"color: #007700;\">And while thinking about this, I have another proposal. How about to</span>\n&gt;<span style=\"color: #007700;\">include the directory from where the program was started into the load</span>\n&gt;<span style=\"color: #007700;\">path too? That would enable me to put my application with its support</span>\n&gt;<span style=\"color: #007700;\">libs into an own subdirectory and after starting, the load path would</span>\n&gt;<span style=\"color: #007700;\">already contain this directory too! So its support libs could easily</span>\n&gt;<span style=\"color: #007700;\">be required too. But this should only happen, of course, if $0 is not</span>\n&gt;<span style=\"color: #007700;\">'-' or '-e'.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">Only, I am not sure about the sequence. Should such an application</span>\n&gt;<span style=\"color: #007700;\">directory comes before or after \".\"? Ah ... before I forget, platform</span>\n&gt;<span style=\"color: #007700;\">dependend directories within application dir should also be</span>\n&gt;<span style=\"color: #007700;\">considered.</span>\n&gt;\n&gt;<span style=\"color: #007700;\">\\cle</span>\n&gt;\n&gt;<span style=\"color: #007700;\">--</span>\n&gt;<span style=\"color: #007700;\">Clemens Hintze  mailto: c.hintze / gmx.net</span>\n\n______________________________________________________\nGet Your Private, Free Email at <a href=\"http://www.hotmail.com\" target=\"_top\">http://www.hotmail.com</a>\n\n<a name=\"tail\"></a></pre>", "references": [""], "user": "thucdat@  t  i  c", "date": "2000-03-24 09:54:02 ", "reply-to": "", "id": "2130", "channel": "ruby-talk", "subject": "[ruby-talk:02130] Re: Question the sequence in $:"}
{"name": "Clemens Hintze", "url": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/2129", "text": "<pre>Hi,\n\nI have found the following:\n\n$ ruby -v\nruby 1.5.3 (2000-03-15) [i586-linux] \n\n$ ruby -e '$:.each{|p| p p}'\n\"/usr/local/lib/ruby/site_ruby/1.5/i586-linux\"\n\"/usr/local/lib/ruby/site_ruby/1.5\"\n\"/usr/local/lib/ruby/site_ruby\"\n\"/usr/local/lib/ruby/1.5/i586-linux\"\n\"/usr/local/lib/ruby/1.5\"\n\".\"  \n\nAs you can see the local directory \".\" is at the end of the load\npath. That means, that my current directory is the last one to be\nsearched for libs.\n\nIs this intended?\n\nI would mean the \".\" should be the *first* entry within the load\npath. My local libs should overwrite site and system ones! If not, I\ncould not e.g. copy a system lib and patch it.\n\nI think everywhere the sequence should be: \n\n   local -&gt; site -&gt; system\n\nOther opinions?\n\nAnd while thinking about this, I have another proposal. How about to\ninclude the directory from where the program was started into the load\npath too? That would enable me to put my application with its support\nlibs into an own subdirectory and after starting, the load path would\nalready contain this directory too! So its support libs could easily\nbe required too. But this should only happen, of course, if $0 is not\n'-' or '-e'.\n\nOnly, I am not sure about the sequence. Should such an application\ndirectory comes before or after \".\"? Ah ... before I forget, platform\ndependend directories within application dir should also be\nconsidered.\n\n\\cle\n\n-- \nClemens Hintze  mailto: c.hintze / gmx.net\n<a name=\"tail\"></a></pre>", "references": [""], "user": "c.hintze@  x  e", "date": "2000-03-24 15:14:44 +0100", "reply-to": "", "id": "2129", "channel": "ruby-talk", "subject": "[ruby-talk:02129] Question the sequence in $:"}
